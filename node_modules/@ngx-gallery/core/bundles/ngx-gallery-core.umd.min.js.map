{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@ngx-gallery/core/lib/models/constants.ts","ng://@ngx-gallery/core/lib/utils/gallery.default.ts","ng://@ngx-gallery/core/lib/components/templates/items.model.ts","ng://@ngx-gallery/core/lib/services/gallery-ref.ts","ng://@ngx-gallery/core/lib/models/config.model.ts","ng://@ngx-gallery/core/lib/services/gallery.service.ts","ng://@ngx-gallery/core/lib/components/gallery.component.ts","ng://@ngx-gallery/core/lib/components/templates/gallery-iframe.component.ts","ng://@ngx-gallery/core/lib/components/templates/gallery-image.component.ts","ng://@ngx-gallery/core/lib/components/templates/gallery-video.component.ts","ng://@ngx-gallery/core/lib/components/gallery-nav.component.ts","ng://@ngx-gallery/core/lib/components/gallery-core.component.ts","ng://@ngx-gallery/core/lib/components/gallery-dots.component.ts","ng://@ngx-gallery/core/lib/components/gallery-thumbs.component.ts","ng://@ngx-gallery/core/lib/components/gallery-slider.component.ts","ng://@ngx-gallery/core/lib/components/gallery-counter.component.ts","ng://@ngx-gallery/core/lib/components/gallery-item.component.ts","ng://@ngx-gallery/core/lib/components/gallery-thumb.component.ts","ng://@ngx-gallery/core/lib/components/templates/radial-progress.component.ts","ng://@ngx-gallery/core/lib/directives/lazy-image.ts","ng://@ngx-gallery/core/lib/directives/tap-click.ts","ng://@ngx-gallery/core/lib/services/cache.service.ts","ng://@ngx-gallery/core/lib/services/cache.interceptor.ts","ng://@ngx-gallery/core/lib/gallery.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","__spread","concat","INITIALIZED","ITEMS_CHANGED","INDEX_CHANGED","PLAY","STOP","Cover","Contain","Preload","Lazy","Default","Top","Left","Right","Bottom","Determinate","Indeterminate","Free","Strict","Horizontal","Vertical","Image","Video","Youtube","Iframe","defaultState","action","GalleryAction","isPlaying","hasNext","hasPrev","currIndex","items","defaultConfig","nav","loop","zoomOut","dots","thumb","dotsSize","counter","gestures","autoPlay","thumbWidth","thumbHeight","panSensitivity","disableThumb","playerInterval","imageSize","ImageSize","thumbMode","ThumbnailsMode","dotsPosition","DotsPosition","counterPosition","CounterPosition","thumbPosition","ThumbnailsPosition","loadingMode","ImageLoaderMode","loadingStrategy","LoadingStrategy","slidingDirection","SlidingDirection","navIcon","ImageItem","data","type","GalleryItemType","src","filterActions","actions","filter","state","indexOf","GalleryRef","config","deleteInstance","itemClick","Subject","thumbClick","_state","BehaviorSubject","_config","asObservable","defineProperty","pipe","activatePlayer","_this","playerActions","switchMap","of","delay","tap","EMPTY","setState","setConfig","add","item","active","addImage","addVideo","VideoItem","addIframe","IframeItem","addYoutube","YoutubeItem","remove","slice","load","set","prev","play","interval","stop","reset","destroy","complete","GALLERY_CONFIG","InjectionToken","Gallery","_instances","Map","ref","id","has","galleryRef","get","destroyAll","forEach","resetAll","delete","Injectable","args","providedIn","Optional","Inject","GalleryComponent","_gallery","itemTemplate","thumbTemplate","destroyRef","skipInitConfig","EventEmitter","playingChange","indexChange","itemsChange","_itemClick$","Subscription","_thumbClick$","_itemChange$","_indexChange$","_playingChange$","_playerListener$","getConfig","onAction","ngOnChanges","changes","currentValue","previousValue","ngOnInit","subscribe","observers","indexChanged","emit","itemsChanged","playingChanged","ngOnDestroy","unsubscribe","onItemClick","onThumbClick","onError","err","Component","selector","changeDetection","ChangeDetectionStrategy","OnPush","template","Input","Output","GalleryIframeComponent","_sanitizer","shouldPause","iframe","nativeElement","iframeSrc","bypassSecurityTrustResourceUrl","DomSanitizer","ViewChild","GalleryImageComponent","progress","mode","imageUrl","loadError","loadingIcon","loaderTemplate","bypassSecurityTrustHtml","loadingError","errorTemplate","onProgress","_a","loaded","total","onLoaded","blobUrl","bypassSecurityTrustStyle","animations","trigger","transition","style","opacity","animate","HostBinding","GalleryVideoComponent","video","paused","pause","Array","videoSources","url","GalleryNavComponent","GalleryCoreComponent","GalleryDotsComponent","GalleryThumbsComponent","_el","_zone","_slidingWorker$","_freeModeCurrentOffset","sliderState$","map","getSliderStyles","updateSlider","Hammer","direction","DIRECTION_VERTICAL","DIRECTION_HORIZONTAL","_hammer","runOutsideAngular","on","strictMode","freeMode","deltaY","isFinal","verticalPan","deltaX","horizontalPan","minFreeScrollExceeded","maxFreeScrollExceeded","delta","width","height","transform","DIRECTION_UP","offsetDirection","velocityY","velocityX","newState","ElementRef","NgZone","GallerySliderComponent","platform","isPlatformBrowser","_resizeSub$","fromEvent","window","debounceTime","setTimeout","offsetWidth","offsetHeight","decorators","PLATFORM_ID","GalleryCounterComponent","GalleryItemComponent","Types","index","GalleryThumbComponent","RadialProgressComponent","diameter","strokeWidth","viewBox","circleRadius","Math","PI","strokeCircumference","host","[attr.mode]","[style.width.px]","[style.height.px]","LazyImage","http","document","_imageLoader$","_loaderSub$","imageSrc","progressiveLoader","nativeLoader","loadImage","imagePath","downloadImage","HttpRequest","reportProgress","responseType","headers","HttpHeaders","CACHE_GALLERY_IMAGE","request","event","HttpEventType","DownloadProgress","Response","URL","createObjectURL","body","catchError","img","createElement","loadSuccess","Error","zip","Directive","HttpClient","DOCUMENT","TapClick","clickListener","tapClick","activateClickEvent","tapClickDisabled","RequestCacheWithMap","cache","req","urlWithParams","cached","response","undefined","put","entry","lastRead","Date","now","expired","CachingInterceptor","intercept","method","cachedResponse","results$","sendRequest","startWith","handle","RequestCache","clone","HttpResponse","GalleryModule","withConfig","ngModule","providers","provide","useValue","NgModule","imports","CommonModule","HttpClientModule","useClass","HTTP_INTERCEPTORS","multi","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export enum GalleryAction {\r\n  INITIALIZED = 'initialized',\r\n  ITEMS_CHANGED = 'itemsChanged',\r\n  INDEX_CHANGED = 'indexChanged',\r\n  PLAY = 'play',\r\n  STOP = 'stop'\r\n}\r\n\r\nexport enum ImageSize {\r\n  Cover = 'cover',\r\n  Contain = 'contain'\r\n}\r\n\r\nexport enum LoadingStrategy {\r\n  Preload = 'preload',\r\n  Lazy = 'lazy',\r\n  Default = 'default'\r\n}\r\n\r\nexport enum ThumbnailsPosition {\r\n  Top = 'top',\r\n  Left = 'left',\r\n  Right = 'right',\r\n  Bottom = 'bottom'\r\n}\r\n\r\nexport enum ImageLoaderMode {\r\n  Determinate= 'determinate',\r\n  Indeterminate= 'indeterminate'\r\n}\r\n\r\nexport enum DotsPosition {\r\n  Top = 'top',\r\n  Bottom = 'bottom'\r\n}\r\n\r\nexport enum CounterPosition {\r\n  Top = 'top',\r\n  Bottom = 'bottom'\r\n}\r\n\r\nexport enum ThumbnailsMode {\r\n  Free = 'free',\r\n  Strict = 'strict'\r\n}\r\n\r\nexport enum SlidingDirection {\r\n  Horizontal = 'horizontal',\r\n  Vertical = 'vertical'\r\n}\r\n\r\nexport enum GalleryItemType {\r\n  Image = 'image',\r\n  Video = 'video',\r\n  Youtube = 'youtube',\r\n  Iframe = 'iframe'\r\n}\r\n","import {\r\n  ImageSize,\r\n  GalleryAction,\r\n  ThumbnailsMode,\r\n  LoadingStrategy,\r\n  SlidingDirection,\r\n  ThumbnailsPosition,\r\n  ImageLoaderMode,\r\n  DotsPosition,\r\n  CounterPosition\r\n} from '../models/constants';\r\nimport { GalleryState } from '../models/gallery.model';\r\nimport { GalleryConfig } from '../models/config.model';\r\n\r\n/** Initial state */\r\nexport const defaultState: GalleryState = {\r\n  action: GalleryAction.INITIALIZED,\r\n  isPlaying: false,\r\n  hasNext: false,\r\n  hasPrev: false,\r\n  currIndex: 0,\r\n  items: []\r\n};\r\n\r\nexport const defaultConfig: GalleryConfig = {\r\n  nav: true,\r\n  loop: true,\r\n  zoomOut: 0,\r\n  dots: false,\r\n  thumb: true,\r\n  dotsSize: 30,\r\n  counter: true,\r\n  gestures: true,\r\n  autoPlay: false,\r\n  thumbWidth: 120,\r\n  thumbHeight: 90,\r\n  panSensitivity: 25,\r\n  disableThumb: false,\r\n  playerInterval: 3000,\r\n  imageSize: ImageSize.Contain,\r\n  thumbMode: ThumbnailsMode.Strict,\r\n  dotsPosition: DotsPosition.Bottom,\r\n  counterPosition: CounterPosition.Top,\r\n  thumbPosition: ThumbnailsPosition.Bottom,\r\n  loadingMode: ImageLoaderMode.Determinate,\r\n  loadingStrategy: LoadingStrategy.Default,\r\n  slidingDirection: SlidingDirection.Horizontal,\r\n  navIcon: `<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"512px\" height=\"512px\" enable-background=\"new 0 0 240.823 240.823\" version=\"1.1\" viewBox=\"0 0 240.823 240.823\" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m183.19 111.82l-108.3-108.26c-4.752-4.74-12.451-4.74-17.215 0-4.752 4.74-4.752 12.439 0 17.179l99.707 99.671-99.695 99.671c-4.752 4.74-4.752 12.439 0 17.191 4.752 4.74 12.463 4.74 17.215 0l108.3-108.26c4.68-4.691 4.68-12.511-0.012-17.19z\" fill=\"#fff\"/></svg>`,\r\n};\r\n","import { GalleryItem } from '../../models/gallery.model';\r\nimport { GalleryItemType } from '../../models/constants';\r\n\r\nexport class ImageItem implements GalleryItem {\r\n  readonly type: string;\r\n  readonly data: any;\r\n\r\n  constructor(data: any) {\r\n    this.data = data;\r\n    this.type = GalleryItemType.Image;\r\n  }\r\n}\r\n\r\nexport class VideoItem implements GalleryItem {\r\n  readonly type: string;\r\n  readonly data: any;\r\n\r\n  constructor(data: any) {\r\n    this.data = data;\r\n    this.type = GalleryItemType.Video;\r\n  }\r\n}\r\n\r\nexport class IframeItem implements GalleryItem {\r\n  readonly type: string;\r\n  readonly data: any;\r\n\r\n  constructor(data: any) {\r\n    this.data = data;\r\n    this.type = GalleryItemType.Iframe;\r\n  }\r\n}\r\n\r\nexport class YoutubeItem implements GalleryItem {\r\n  readonly type: string;\r\n  readonly data: any;\r\n\r\n  constructor(data: any) {\r\n    this.data = {\r\n      src: `//youtube.com/embed/${data.src}?wmode=transparent`,\r\n      thumb: data.thumb ? data.thumb : `//img.youtube.com/vi/${data.src}/default.jpg`\r\n    };\r\n    this.type = GalleryItemType.Youtube;\r\n  }\r\n}\r\n","import { BehaviorSubject, Subject, Observable, of, EMPTY} from 'rxjs';\r\nimport { delay, filter, switchMap, tap } from 'rxjs/operators';\r\nimport { defaultState } from '../utils/gallery.default';\r\nimport { GalleryError, GalleryItem, GalleryState } from '../models/gallery.model';\r\nimport { GalleryConfig } from '../models/config.model';\r\nimport { GalleryAction } from '../models/constants';\r\nimport { IframeItem, ImageItem, VideoItem, YoutubeItem } from '../components/templates/items.model';\r\n\r\nconst filterActions = (actions: string[]) => {\r\n  return filter((state: GalleryState) => actions.indexOf(state.action) > -1);\r\n};\r\n\r\nexport class GalleryRef {\r\n\r\n  /** Stream that emits gallery state */\r\n  private readonly _state: BehaviorSubject<GalleryState>;\r\n\r\n  /** Stream that emits gallery config */\r\n  private readonly _config: BehaviorSubject<GalleryConfig>;\r\n\r\n  /** Stream that emits on item click */\r\n  readonly itemClick = new Subject<number>();\r\n\r\n  /** Stream that emits on thumbnail click */\r\n  readonly thumbClick = new Subject<number>();\r\n\r\n  /** Stream that emits on an error occurs */\r\n  readonly error = new Subject<GalleryError>();\r\n\r\n  /** Gallery Events */\r\n\r\n  /** Stream that emits gallery state */\r\n  readonly state: Observable<GalleryState>;\r\n\r\n  /** Stream that emits gallery config */\r\n  readonly config: Observable<GalleryConfig>;\r\n\r\n  /** Stream that emits when gallery is initialized/reset */\r\n  get initialized(): Observable<GalleryState> {\r\n    return this.state.pipe(filterActions([GalleryAction.INITIALIZED]));\r\n  }\r\n\r\n  /** Stream that emits when items is changed (items loaded, item added, item removed) */\r\n  get itemsChanged(): Observable<GalleryState> {\r\n    return this.state.pipe(filterActions([GalleryAction.ITEMS_CHANGED]));\r\n  }\r\n\r\n  /** Stream that emits when current item is changed */\r\n  get indexChanged(): Observable<GalleryState> {\r\n    return this.state.pipe(filterActions([GalleryAction.INDEX_CHANGED]));\r\n  }\r\n\r\n  /** Stream that emits when the player should start or stop */\r\n  get playingChanged(): Observable<GalleryState> {\r\n    return this.state.pipe(filterActions([GalleryAction.PLAY, GalleryAction.STOP]));\r\n  }\r\n\r\n  /** Stream that emits when the player should start or stop */\r\n  private get playerActions(): Observable<GalleryState> {\r\n    return this.state.pipe(filterActions([GalleryAction.PLAY, GalleryAction.STOP, GalleryAction.INDEX_CHANGED]));\r\n  }\r\n\r\n  constructor(config: GalleryConfig, private deleteInstance: Function) {\r\n    this._state = new BehaviorSubject<GalleryState>(defaultState);\r\n    this._config = new BehaviorSubject<GalleryConfig>(config);\r\n    this.state = this._state.asObservable();\r\n    this.config = this._config.asObservable();\r\n  }\r\n\r\n  /**\r\n   * Activate player actions listener\r\n   */\r\n  activatePlayer(): Observable<GalleryState> {\r\n    return this.playerActions.pipe(\r\n      switchMap((e: GalleryState) =>\r\n        e.isPlaying ? of({}).pipe(\r\n          delay(this._config.value.playerInterval),\r\n          tap(() => this.next())\r\n        ) : EMPTY\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Set gallery state\r\n   * @param state\r\n   */\r\n  private setState(state: GalleryState) {\r\n    this._state.next({...this._state.value, ...state});\r\n  }\r\n\r\n  /**\r\n   * Set gallery config\r\n   * @param config\r\n   */\r\n  setConfig(config: GalleryConfig) {\r\n    this._config.next({...this._config.value, ...config});\r\n  }\r\n\r\n  /** Add gallery item\r\n   * @param item - Gallery item object\r\n   * @param active - Set the new item as current slide\r\n   */\r\n  add(item: GalleryItem, active?: boolean) {\r\n\r\n    const items = [...this._state.value.items, item];\r\n    this.setState({\r\n      action: GalleryAction.ITEMS_CHANGED,\r\n      items: items,\r\n      hasNext: items.length > 1,\r\n      currIndex: active ? items.length - 1 : this._state.value.currIndex\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add image item\r\n   * @param data\r\n   * @param active\r\n   */\r\n  addImage(data: any, active?: boolean) {\r\n    this.add(new ImageItem(data), active);\r\n  }\r\n\r\n  /**\r\n   * Add video item\r\n   * @param data\r\n   * @param active\r\n   */\r\n  addVideo(data: any, active?: boolean) {\r\n    this.add(new VideoItem(data), active);\r\n  }\r\n\r\n  /**\r\n   * Add iframe item\r\n   * @param data\r\n   * @param active\r\n   */\r\n  addIframe(data: any, active?: boolean) {\r\n    this.add(new IframeItem(data), active);\r\n  }\r\n\r\n  /**\r\n   * Add youtube item\r\n   * @param data\r\n   * @param active\r\n   */\r\n  addYoutube(data: any, active?: boolean) {\r\n    this.add(new YoutubeItem(data), active);\r\n  }\r\n\r\n  /** Remove gallery item\r\n   * @param i - Item index\r\n   */\r\n  remove(i: number) {\r\n    const items = [\r\n      ...this._state.value.items.slice(0, i),\r\n      ...this._state.value.items.slice(i + 1, this._state.value.items.length)\r\n    ];\r\n    this.setState({\r\n      action: GalleryAction.ITEMS_CHANGED,\r\n      items: items,\r\n      hasNext: items.length > 1,\r\n      hasPrev: i > 0\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Load items and reset the state\r\n   * @param items - Gallery images data\r\n   */\r\n  load(items: GalleryItem[]) {\r\n    if (items) {\r\n      this.setState({\r\n        action: GalleryAction.ITEMS_CHANGED,\r\n        items: items,\r\n        hasNext: items.length > 1,\r\n        hasPrev: false\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set active item\r\n   * @param i - Active Index\r\n   */\r\n  set(i: number) {\r\n    if (i !== this._state.value.currIndex) {\r\n      this.setState({\r\n        action: GalleryAction.INDEX_CHANGED,\r\n        currIndex: i,\r\n        hasNext: i < this._state.value.items.length - 1,\r\n        hasPrev: i > 0\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Next item\r\n   */\r\n  next() {\r\n    if (this._state.value.hasNext) {\r\n      this.set(this._state.value.currIndex + 1);\r\n    } else if (this._config.value.loop) {\r\n      this.set(0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Prev item\r\n   */\r\n  prev() {\r\n    if (this._state.value.hasPrev) {\r\n      this.set(this._state.value.currIndex - 1);\r\n    } else if (this._config.value.loop) {\r\n      this.set(this._state.value.items.length - 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start gallery player\r\n   * @param interval\r\n   */\r\n  play(interval?: number) {\r\n    if (interval) {\r\n      this.setConfig({playerInterval: interval});\r\n    }\r\n    this.setState({action: GalleryAction.PLAY, isPlaying: true});\r\n  }\r\n\r\n  /**\r\n   * Stop gallery player\r\n   */\r\n  stop() {\r\n    this.setState({action: GalleryAction.STOP, isPlaying: false});\r\n  }\r\n\r\n  /**\r\n   * Reset gallery to initial state\r\n   */\r\n  reset() {\r\n    this.setState(defaultState);\r\n  }\r\n\r\n  /**\r\n   * Destroy gallery\r\n   */\r\n  destroy() {\r\n    this._state.complete();\r\n    this._config.complete();\r\n    this.itemClick.complete();\r\n    this.thumbClick.complete();\r\n    this.deleteInstance();\r\n  }\r\n\r\n}\r\n","import { InjectionToken, TemplateRef } from '@angular/core';\r\n\r\nexport const GALLERY_CONFIG = new InjectionToken<GalleryConfig>('galleryConfig');\r\n\r\nexport interface GalleryConfig {\r\n  nav?: boolean;\r\n  dots?: boolean;\r\n  loop?: boolean;\r\n  thumb?: boolean;\r\n  zoomOut?: number;\r\n  navIcon?: string;\r\n  counter?: boolean;\r\n  dotsSize?: number;\r\n  gestures?: boolean;\r\n  autoPlay?: boolean;\r\n  thumbWidth?: number;\r\n  thumbHeight?: number;\r\n  loadingIcon?: string;\r\n  loadingError?: string;\r\n  thumbLoadingIcon?: string;\r\n  thumbLoadingError?: string;\r\n  disableThumb?: boolean;\r\n  panSensitivity?: number;\r\n  playerInterval?: number;\r\n  itemTemplate?: TemplateRef<any>;\r\n  thumbTemplate?: TemplateRef<any>;\r\n  thumbMode?: 'strict' | 'free';\r\n  imageSize?: 'cover' | 'contain';\r\n  dotsPosition?: 'top' | 'bottom';\r\n  counterPosition?: 'top' | 'bottom';\r\n  slidingDirection?: 'horizontal' | 'vertical';\r\n  loadingMode?: 'determinate' | 'indeterminate';\r\n  loadingStrategy?: 'preload' | 'lazy' | 'default';\r\n  thumbPosition?: 'top' | 'left' | 'right' | 'bottom';\r\n}\r\n","import { Inject, Injectable, Optional } from '@angular/core';\r\n\r\nimport { GalleryRef } from './gallery-ref';\r\nimport { GalleryConfig, GALLERY_CONFIG } from '../models/config.model';\r\nimport { defaultConfig } from '../utils/gallery.default';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class Gallery {\r\n\r\n  /** Store gallery instances */\r\n  private readonly _instances = new Map<string, GalleryRef>();\r\n\r\n  /** Global config */\r\n  config: GalleryConfig;\r\n\r\n  constructor(@Optional() @Inject(GALLERY_CONFIG) config: GalleryConfig) {\r\n    this.config = config ? {...defaultConfig, ...config} : defaultConfig;\r\n  }\r\n\r\n  /**\r\n   * Get or create gallery by ID\r\n   * @param id\r\n   * @param config\r\n   */\r\n  ref(id = 'root', config?: GalleryConfig): GalleryRef {\r\n    if (this._instances.has(id)) {\r\n      const galleryRef = this._instances.get(id);\r\n      if (config) {\r\n        galleryRef.setConfig({...this.config, ...config});\r\n      }\r\n      return galleryRef;\r\n    } else {\r\n      return this._instances.set(id, new GalleryRef({...this.config, ...config}, this.deleteInstance(id))).get(id);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroy all gallery instances\r\n   */\r\n  destroyAll() {\r\n    this._instances.forEach((ref: GalleryRef) => ref.destroy());\r\n  }\r\n\r\n  /**\r\n   * Reset all gallery instances\r\n   */\r\n  resetAll() {\r\n    this._instances.forEach((ref: GalleryRef) => ref.reset());\r\n  }\r\n\r\n  /**\r\n   * A destroyer function for each gallery instance\r\n   */\r\n  private deleteInstance(id: string) {\r\n    return () => {\r\n      if (this._instances.has(id)) {\r\n        this._instances.delete(id);\r\n      }\r\n    };\r\n  }\r\n\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  OnInit,\r\n  OnChanges,\r\n  OnDestroy,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { Subscription, SubscriptionLike } from 'rxjs';\r\nimport { Gallery } from '../services/gallery.service';\r\nimport { GalleryRef } from '../services/gallery-ref';\r\nimport { GalleryError, GalleryItem, GalleryState } from '../models/gallery.model';\r\nimport { IframeItem, ImageItem, VideoItem, YoutubeItem } from './templates/items.model';\r\n\r\n@Component({\r\n  selector: 'gallery',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['../styles/gallery.scss'],\r\n  template: `\r\n    <gallery-core [state]=\"galleryRef.state | async\"\r\n                  [config]=\"galleryRef.config | async\"\r\n                  (action)=\"onAction($event)\"\r\n                  (itemClick)=\"onItemClick($event)\"\r\n                  (thumbClick)=\"onThumbClick($event)\"\r\n                  (error)=\"onError($event)\"></gallery-core>\r\n    <ng-content></ng-content>\r\n  `\r\n})\r\nexport class GalleryComponent implements OnInit, OnChanges, OnDestroy {\r\n\r\n  galleryRef: GalleryRef;\r\n  @Input() id: string;\r\n  @Input() items: GalleryItem [];\r\n  @Input() nav: boolean = this._gallery.config.nav;\r\n  @Input() dots: boolean = this._gallery.config.dots;\r\n  @Input() loop: boolean = this._gallery.config.loop;\r\n  @Input() thumb: boolean = this._gallery.config.thumb;\r\n  @Input() zoomOut: number = this._gallery.config.zoomOut;\r\n  @Input() counter: boolean = this._gallery.config.counter;\r\n  @Input() dotsSize: number = this._gallery.config.dotsSize;\r\n  @Input() autoPlay: boolean = this._gallery.config.autoPlay;\r\n  @Input() gestures: boolean = this._gallery.config.gestures;\r\n  @Input() thumbWidth: number = this._gallery.config.thumbWidth;\r\n  @Input() thumbHeight: number = this._gallery.config.thumbHeight;\r\n  @Input() disableThumb: boolean = this._gallery.config.disableThumb;\r\n  @Input() panSensitivity: number = this._gallery.config.panSensitivity;\r\n  @Input() playerInterval: number = this._gallery.config.playerInterval;\r\n  @Input() itemTemplate: TemplateRef<any> = this._gallery.config.itemTemplate;\r\n  @Input() thumbTemplate: TemplateRef<any> = this._gallery.config.thumbTemplate;\r\n  @Input() thumbMode: 'strict' | 'free' = this._gallery.config.thumbMode;\r\n  @Input() imageSize: 'cover' | 'contain' = this._gallery.config.imageSize;\r\n  @Input() dotsPosition: 'top' | 'bottom' = this._gallery.config.dotsPosition;\r\n  @Input() counterPosition: 'top' | 'bottom' = this._gallery.config.counterPosition;\r\n  @Input() slidingDirection: 'horizontal' | 'vertical' = this._gallery.config.slidingDirection;\r\n  @Input() loadingMode: 'determinate' | 'indeterminate' = this._gallery.config.loadingMode;\r\n  @Input() loadingStrategy: 'preload' | 'lazy' | 'default' = this._gallery.config.loadingStrategy;\r\n  @Input() thumbPosition: 'top' | 'left' | 'right' | 'bottom' = this._gallery.config.thumbPosition;\r\n\r\n  // Inputs used by the lightbox\r\n\r\n  /** Destroy gallery ref on component destroy event */\r\n  @Input() destroyRef = true;\r\n\r\n  /** Skip initializing the config with components inputs (Lightbox mode) */\r\n  @Input() skipInitConfig = false;\r\n\r\n  @Output() itemClick = new EventEmitter<number>();\r\n  @Output() thumbClick = new EventEmitter<number>();\r\n  @Output() playingChange = new EventEmitter<GalleryState>();\r\n  @Output() indexChange = new EventEmitter<GalleryState>();\r\n  @Output() itemsChange = new EventEmitter<GalleryState>();\r\n  @Output() error = new EventEmitter<GalleryError>();\r\n\r\n  private _itemClick$: SubscriptionLike = Subscription.EMPTY;\r\n  private _thumbClick$: SubscriptionLike = Subscription.EMPTY;\r\n  private _itemChange$: SubscriptionLike = Subscription.EMPTY;\r\n  private _indexChange$: SubscriptionLike = Subscription.EMPTY;\r\n  private _playingChange$: SubscriptionLike = Subscription.EMPTY;\r\n  private _playerListener$: SubscriptionLike = Subscription.EMPTY;\r\n\r\n  constructor(private _gallery: Gallery) {\r\n  }\r\n\r\n  private getConfig() {\r\n    return {\r\n      nav: this.nav,\r\n      dots: this.dots,\r\n      loop: this.loop,\r\n      thumb: this.thumb,\r\n      zoomOut: this.zoomOut,\r\n      counter: this.counter,\r\n      autoPlay: this.autoPlay,\r\n      gestures: this.gestures,\r\n      dotsSize: this.dotsSize,\r\n      imageSize: this.imageSize,\r\n      thumbMode: this.thumbMode,\r\n      thumbWidth: this.thumbWidth,\r\n      thumbHeight: this.thumbHeight,\r\n      loadingMode: this.loadingMode,\r\n      disableThumb: this.disableThumb,\r\n      dotsPosition: this.dotsPosition,\r\n      itemTemplate: this.itemTemplate,\r\n      thumbTemplate: this.thumbTemplate,\r\n      thumbPosition: this.thumbPosition,\r\n      panSensitivity: this.panSensitivity,\r\n      playerInterval: this.playerInterval,\r\n      counterPosition: this.counterPosition,\r\n      loadingStrategy: this.loadingStrategy,\r\n      slidingDirection: this.slidingDirection\r\n    };\r\n  }\r\n\r\n  onAction(i: string | number) {\r\n    switch (i) {\r\n      case 'next':\r\n        this.galleryRef.next();\r\n        break;\r\n      case 'prev':\r\n        this.galleryRef.prev();\r\n        break;\r\n      default:\r\n        this.galleryRef.set(<number>i);\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (this.galleryRef) {\r\n      this.galleryRef.setConfig(this.getConfig());\r\n\r\n      if (changes.items && changes.items.currentValue !== changes.items.previousValue) {\r\n        this.load(this.items);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Get gallery instance by id\r\n    if (this.skipInitConfig) {\r\n      this.galleryRef = this._gallery.ref(this.id);\r\n    } else {\r\n      this.galleryRef = this._gallery.ref(this.id, this.getConfig());\r\n    }\r\n\r\n    // Load gallery items\r\n    this.load(this.items);\r\n\r\n    // Activate player listener\r\n    this._playerListener$ = this.galleryRef.activatePlayer().subscribe();\r\n\r\n    // Subscribes to events on demand\r\n    if (this.indexChange.observers.length) {\r\n      this._indexChange$ = this.galleryRef.indexChanged.subscribe((state: GalleryState) => this.indexChange.emit(state));\r\n    }\r\n    if (this.itemsChange.observers.length) {\r\n      this._itemChange$ = this.galleryRef.itemsChanged.subscribe((state: GalleryState) => this.itemsChange.emit(state));\r\n    }\r\n    if (this.playingChange.observers.length) {\r\n      this._playingChange$ = this.galleryRef.playingChanged.subscribe((state: GalleryState) => this.playingChange.emit(state));\r\n    }\r\n\r\n    // Start playing if auto-play is set to true\r\n    if (this.autoPlay) {\r\n      this.play();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._itemClick$.unsubscribe();\r\n    this._thumbClick$.unsubscribe();\r\n    this._itemChange$.unsubscribe();\r\n    this._indexChange$.unsubscribe();\r\n    this._playingChange$.unsubscribe();\r\n    this._playerListener$.unsubscribe();\r\n    if (this.destroyRef) {\r\n      this.galleryRef.destroy();\r\n    }\r\n  }\r\n\r\n  onItemClick(i: number) {\r\n    this.itemClick.emit(i);\r\n    this.galleryRef.itemClick.next(i);\r\n  }\r\n\r\n  onThumbClick(i: number) {\r\n    this.galleryRef.set(i);\r\n    this.thumbClick.emit(i);\r\n    this.galleryRef.thumbClick.next(i);\r\n  }\r\n\r\n  onError(err: GalleryError) {\r\n    this.error.emit(err);\r\n    this.galleryRef.error.next(err);\r\n  }\r\n\r\n  load(items: GalleryItem[]) {\r\n    this.galleryRef.load(items);\r\n  }\r\n\r\n  add(item: GalleryItem, active?: boolean) {\r\n    this.galleryRef.add(item, active);\r\n  }\r\n\r\n  addImage(data: any, active?: boolean) {\r\n    this.add(new ImageItem(data), active);\r\n  }\r\n\r\n  addVideo(data: any, active?: boolean) {\r\n    this.add(new VideoItem(data), active);\r\n  }\r\n\r\n  addIframe(data: any, active?: boolean) {\r\n    this.add(new IframeItem(data), active);\r\n  }\r\n\r\n  addYoutube(data: any, active?: boolean) {\r\n    this.add(new YoutubeItem(data), active);\r\n  }\r\n\r\n  remove(i: number) {\r\n    this.galleryRef.remove(i);\r\n  }\r\n\r\n  next() {\r\n    this.galleryRef.next();\r\n  }\r\n\r\n  prev() {\r\n    this.galleryRef.prev();\r\n  }\r\n\r\n  set(i: number) {\r\n    this.galleryRef.set(i);\r\n  }\r\n\r\n  reset() {\r\n    this.galleryRef.reset();\r\n  }\r\n\r\n  play(interval?: number) {\r\n    this.galleryRef.play(interval);\r\n  }\r\n\r\n  stop() {\r\n    this.galleryRef.stop();\r\n  }\r\n}\r\n","import { Component, Input, OnInit, ViewChild, ElementRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'gallery-iframe',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <iframe #iframe\r\n            frameborder=\"0\"\r\n            allowfullscreen\r\n            [src]=\"iframeSrc\">\r\n    </iframe>\r\n  `\r\n})\r\nexport class GalleryIframeComponent implements OnInit {\r\n\r\n  iframeSrc: SafeResourceUrl;\r\n\r\n  @Input() src: string;\r\n\r\n  @Input('pause') set pauseVideo(shouldPause: boolean) {\r\n    const iframe: HTMLIFrameElement = this.iframe.nativeElement;\r\n    if (shouldPause) {\r\n      const src = iframe.src;\r\n      iframe.src = src;\r\n    }\r\n  }\r\n\r\n  @ViewChild('iframe') iframe: ElementRef;\r\n\r\n  constructor(private _sanitizer: DomSanitizer) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.iframeSrc = this._sanitizer.bypassSecurityTrustResourceUrl(this.src);\r\n  }\r\n}\r\n","import { Component, Input, HostBinding, OnInit, Output, EventEmitter, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml, SafeStyle } from '@angular/platform-browser';\r\nimport { animate, style, transition, trigger } from '@angular/animations';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'gallery-image',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('fadeIn', [\r\n      transition(':enter', [\r\n        style({opacity: 0}),\r\n        animate('300ms ease-in', style({opacity: 1}))\r\n      ])\r\n    ])\r\n  ],\r\n  template: `\r\n    <ng-container [lazyImage]=\"src\"\r\n                  [mode]=\"mode\"\r\n                  (progress)=\"onProgress($event)\"\r\n                  (loaded)=\"onLoaded($event)\"\r\n                  (error)=\"onError($event)\"\r\n                  [ngSwitch]=\"state | async\">\r\n\r\n      <div *ngSwitchCase=\"'success'\"\r\n           @fadeIn\r\n           class=\"g-image-item\"\r\n           [style.backgroundImage]=\"imageUrl\">\r\n      </div>\r\n\r\n      <div *ngSwitchCase=\"'failed'\"\r\n           class=\"g-image-error-message\">\r\n        <div *ngIf=\"errorTemplate; else defaultError\"\r\n             [innerHTML]=\"errorTemplate\"></div>\r\n        <ng-template #defaultError>\r\n          <ng-container *ngIf=\"isThumbnail; else isLarge\">\r\n            <h4>â </h4>\r\n          </ng-container>\r\n          <ng-template #isLarge>\r\n            <h2>â </h2>\r\n            <p>Unable to load the image!</p>\r\n          </ng-template>\r\n        </ng-template>\r\n      </div>\r\n\r\n      <ng-container *ngSwitchCase=\"'loading'\">\r\n        <div *ngIf=\"loaderTemplate; else defaultLoader\"\r\n             class=\"g-loading\"\r\n             [innerHTML]=\"loaderTemplate\">\r\n        </div>\r\n        <ng-template #defaultLoader>\r\n\r\n          <div *ngIf=\"isThumbnail; else progressLoader\" class=\"g-thumb-loading\"></div>\r\n\r\n          <ng-template #progressLoader>\r\n            <radial-progress [value]=\"progress\" [mode]=\"mode\"></radial-progress>\r\n          </ng-template>\r\n\r\n          </ng-template>\r\n      </ng-container>\r\n    </ng-container>\r\n  `\r\n})\r\n\r\nexport class GalleryImageComponent implements OnInit, OnDestroy {\r\n\r\n  /** Stream that emits the state */\r\n  private readonly _state = new BehaviorSubject<'loading' | 'success' | 'failed'>('loading');\r\n  readonly state = this._state.asObservable();\r\n\r\n  /** Progress value */\r\n  progress = 0;\r\n\r\n  /** Image loader mode */\r\n  @Input() mode: 'determinate' | 'indeterminate' = 'determinate';\r\n\r\n  /** Is thumbnail */\r\n  @Input() isThumbnail: boolean;\r\n\r\n  /** Image source URL */\r\n  @Input() src: string;\r\n  /** Loaded image URL */\r\n  imageUrl: SafeStyle;\r\n\r\n  /** Custom loader template */\r\n  @Input() loadingIcon: string;\r\n  /** Custom loader safe template */\r\n  loaderTemplate: SafeHtml;\r\n\r\n  /** Custom error template */\r\n  @Input() loadingError: string;\r\n  /** Custom error safe template */\r\n  errorTemplate: SafeHtml;\r\n\r\n  /** Stream that emits when an error occurs */\r\n  @Output() error = new EventEmitter<Error>();\r\n  /** loading error */\r\n  loadError: Error;\r\n\r\n  @HostBinding('class.g-image-loaded') get imageLoadSuccess(): boolean {\r\n    return !!this.imageUrl;\r\n  }\r\n\r\n  @HostBinding('class.g-image-error') get imageLoadFailed(): boolean {\r\n    return !!this.loadError;\r\n  }\r\n\r\n  constructor(private _sanitizer: DomSanitizer) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.loadingIcon) {\r\n      this.loaderTemplate = this._sanitizer.bypassSecurityTrustHtml(this.loadingIcon);\r\n    }\r\n    if (this.loadingError) {\r\n      this.errorTemplate = this._sanitizer.bypassSecurityTrustHtml(this.loadingError);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._state.complete();\r\n  }\r\n\r\n  onProgress({loaded, total}: { loaded: number, total: number }) {\r\n    this.progress = loaded * 100 / total;\r\n  }\r\n\r\n  onLoaded(blobUrl: string) {\r\n    this.imageUrl = this._sanitizer.bypassSecurityTrustStyle(`url(${blobUrl})`);\r\n    this._state.next('success');\r\n  }\r\n\r\n  onError(err: Error) {\r\n    this.loadError = err;\r\n    this._state.next('failed');\r\n    this.error.emit(err);\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnInit, ViewChild, ElementRef, ChangeDetectionStrategy, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gallery-video',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <video #video controls poster=\"{{poster}}\" (error)=\"error.emit($event)\">\r\n      <source *ngFor=\"let src of videoSources\" src=\"{{src?.url}}\" type=\"{{src?.type}}\"/>\r\n    </video>\r\n  `\r\n})\r\nexport class GalleryVideoComponent implements OnInit {\r\n\r\n  videoSources: {url: string, type?: string}[];\r\n\r\n  @Input() src: string | {url: string, type?: string}[];\r\n  @Input() poster: string;\r\n\r\n  @Input('pause') set pauseVideo(shouldPause: boolean) {\r\n    const video: HTMLVideoElement = this.video.nativeElement;\r\n    if (shouldPause && !video.paused) {\r\n      video.pause();\r\n    }\r\n  }\r\n\r\n  /** Stream that emits when an error occurs */\r\n  @Output() error = new EventEmitter<Error>();\r\n\r\n  @ViewChild('video') video: ElementRef;\r\n\r\n  ngOnInit() {\r\n    if (this.src instanceof Array) {\r\n      // If video has multiple sources\r\n      this.videoSources = [...this.src];\r\n    } else {\r\n      this.videoSources = [{ url: this.src }];\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\nimport { GalleryState } from '../models/gallery.model';\r\nimport { GalleryConfig } from '../models/config.model';\r\n\r\n@Component({\r\n  selector: 'gallery-nav',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <i *ngIf=\"config.loop || state.hasPrev\"\r\n       class=\"g-nav-prev\"\r\n       aria-label=\"Previous\"\r\n       (tapClick)=\"action.emit('prev')\"\r\n       [innerHtml]=\"navIcon\"></i>\r\n\r\n    <i *ngIf=\"config.loop || state.hasNext\"\r\n       class=\"g-nav-next\"\r\n       aria-label=\"Next\"\r\n       (tapClick)=\"action.emit('next')\"\r\n       [innerHtml]=\"navIcon\"></i>\r\n  `\r\n})\r\nexport class GalleryNavComponent implements OnInit {\r\n\r\n  navIcon: SafeHtml;\r\n  @Input() state: GalleryState;\r\n  @Input() config: GalleryConfig;\r\n  @Output() action = new EventEmitter<string>();\r\n\r\n  constructor(private _sanitizer: DomSanitizer) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.navIcon = this._sanitizer.bypassSecurityTrustHtml(this.config.navIcon);\r\n  }\r\n}\r\n","import { Component, Input, Output, HostBinding, ChangeDetectionStrategy, EventEmitter } from '@angular/core';\r\nimport { GalleryError, GalleryState } from '../models/gallery.model';\r\nimport { GalleryConfig } from '../models/config.model';\r\n\r\n@Component({\r\n  selector: 'gallery-core',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <gallery-thumbs *ngIf=\"config.thumb\"\r\n                    [state]=\"state\"\r\n                    [config]=\"config\"\r\n                    (action)=\"action.emit($event)\"\r\n                    (thumbClick)=\"thumbClick.emit($event)\">\r\n    </gallery-thumbs>\r\n    <div class=\"g-box\">\r\n      <gallery-slider [state]=\"state\"\r\n                      [config]=\"config\"\r\n                      (action)=\"action.emit($event)\"\r\n                      (itemClick)=\"itemClick.emit($event)\"\r\n                      (error)=\"error.emit($event)\">\r\n\r\n        <gallery-nav *ngIf=\"config.nav && state.items.length > 1\"\r\n                     [state]=\"state\"\r\n                     [config]=\"config\"\r\n                     (action)=\"action.emit($event)\">\r\n        </gallery-nav>\r\n\r\n      </gallery-slider>\r\n\r\n      <gallery-dots *ngIf=\"config.dots\"\r\n                    [state]=\"state\"\r\n                    [config]=\"config\"\r\n                    (action)=\"action.emit($event)\">\r\n      </gallery-dots>\r\n\r\n      <gallery-counter *ngIf=\"config.counter\"\r\n                       [state]=\"state\">\r\n      </gallery-counter>\r\n    </div>\r\n  `\r\n})\r\nexport class GalleryCoreComponent {\r\n\r\n  @Input() state: GalleryState;\r\n  @Input() config: GalleryConfig;\r\n  @Output() action = new EventEmitter<string | number>();\r\n  @Output() itemClick = new EventEmitter<number>();\r\n  @Output() thumbClick = new EventEmitter<number>();\r\n  @Output() error = new EventEmitter<GalleryError>();\r\n\r\n  /** Set thumbnails position */\r\n  @HostBinding('attr.thumbPosition') get thumbPosition(): 'top' | 'left' | 'right' | 'bottom' {\r\n    return this.config.thumbPosition;\r\n  }\r\n\r\n  /** Set sliding direction */\r\n  @HostBinding('attr.slidingDirection') get slidingDirection(): 'horizontal' | 'vertical' {\r\n    return this.config.slidingDirection;\r\n  }\r\n\r\n  /** Disable thumbnails clicks */\r\n  @HostBinding('attr.disableThumb') get disableThumb(): boolean {\r\n    return this.config.disableThumb;\r\n  }\r\n\r\n  /** Set gallery image size */\r\n  @HostBinding('attr.imageSize') get imageSize(): 'cover' | 'contain' {\r\n    return this.config.imageSize;\r\n  }\r\n\r\n  /** Set gallery dots position */\r\n  @HostBinding('attr.dotsPosition') get dotsPosition(): 'top' | 'bottom' {\r\n    return this.config.dotsPosition;\r\n  }\r\n\r\n  /** Set gallery counter position */\r\n  @HostBinding('attr.counterPosition') get counterPosition(): 'top' | 'bottom' {\r\n    return this.config.counterPosition;\r\n  }\r\n\r\n}\r\n","import { Component, Input, Output, ChangeDetectionStrategy, EventEmitter } from '@angular/core';\r\nimport { GalleryState } from '../models/gallery.model';\r\nimport { GalleryConfig } from '../models/config.model';\r\n\r\n@Component({\r\n  selector: 'gallery-dots',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <div class=\"g-dot\"\r\n         *ngFor=\"let item of state.items; let i = index\"\r\n         [class.g-dot-active]=\"i === state.currIndex\"\r\n         [style.width.px]=\"config?.dotsSize\"\r\n         [style.height.px]=\"config?.dotsSize\"\r\n         (tapClick)=\"action.emit(i)\">\r\n      <div class=\"g-dot-inner\"></div>\r\n    </div>\r\n  `\r\n})\r\nexport class GalleryDotsComponent {\r\n  @Input() state: GalleryState;\r\n  @Input() config: GalleryConfig;\r\n  @Output() action = new EventEmitter<number>();\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  OnDestroy,\r\n  OnInit,\r\n  OnChanges,\r\n  HostBinding,\r\n  NgZone,\r\n  ElementRef,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { GalleryConfig } from '../models/config.model';\r\nimport { GalleryState, GalleryError } from '../models/gallery.model';\r\nimport { ThumbnailsPosition, ThumbnailsMode } from '../models/constants';\r\nimport { SliderState, WorkerState } from '../models/slider.model';\r\n\r\ndeclare const Hammer: any;\r\n\r\n@Component({\r\n  selector: 'gallery-thumbs',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <div *ngIf=\"sliderState$ | async; let sliderState\"\r\n         class=\"g-thumbs-container\">\r\n      <div class=\"g-slider\"\r\n           [class.g-no-transition]=\"sliderState.active\"\r\n           [ngStyle]=\"sliderState.style\">\r\n\r\n        <gallery-thumb *ngFor=\"let item of state.items;let i = index\"\r\n                       [type]=\"item.type\"\r\n                       [config]=\"config\"\r\n                       [data]=\"item.data\"\r\n                       [currIndex]=\"state.currIndex\"\r\n                       [index]=\"i\"\r\n                       [tapClickDisabled]=\"config.disableThumb\"\r\n                       (tapClick)=\"thumbClick.emit(i)\"\r\n                       (error)=\"error.emit({itemIndex: i, error: $event})\"></gallery-thumb>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport class GalleryThumbsComponent implements OnInit, OnChanges, OnDestroy {\r\n\r\n  /** Sliding worker */\r\n  private readonly _slidingWorker$ = new BehaviorSubject<WorkerState>({value: 0, active: false});\r\n\r\n  /** HammerJS instance */\r\n  private _hammer: any;\r\n\r\n  /** Current slider position in free sliding mode */\r\n  private _freeModeCurrentOffset = 0;\r\n\r\n  /** Stream that emits sliding state */\r\n  sliderState$: Observable<SliderState>;\r\n\r\n  /** Gallery state */\r\n  @Input() state: GalleryState;\r\n\r\n  /** Gallery config */\r\n  @Input() config: GalleryConfig;\r\n\r\n  /** Stream that emits when the active item should change */\r\n  @Output() action = new EventEmitter<string | number>();\r\n\r\n  /** Stream that emits when thumb is clicked */\r\n  @Output() thumbClick = new EventEmitter<number>();\r\n\r\n  /** Stream that emits when an error occurs */\r\n  @Output() error = new EventEmitter<GalleryError>();\r\n\r\n  /** Host height */\r\n  @HostBinding('style.height') height: string;\r\n\r\n  /** Host width */\r\n  @HostBinding('style.width') width: string;\r\n\r\n  constructor(private _el: ElementRef, private _zone: NgZone) {\r\n\r\n    // Activate sliding worker\r\n    this.sliderState$ = this._slidingWorker$.pipe(map((state: WorkerState) => ({\r\n      style: this.getSliderStyles(state),\r\n      active: state.active\r\n    })));\r\n  }\r\n\r\n  ngOnChanges() {\r\n    // Refresh the slider\r\n    this.updateSlider({value: 0, active: false});\r\n    this._freeModeCurrentOffset = 0;\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.config.gestures && !this.config.disableThumb && typeof Hammer !== 'undefined') {\r\n\r\n      let direction: number;\r\n\r\n      switch (this.config.thumbPosition) {\r\n        case ThumbnailsPosition.Right:\r\n        case ThumbnailsPosition.Left:\r\n          direction = Hammer.DIRECTION_VERTICAL;\r\n          break;\r\n        case ThumbnailsPosition.Top:\r\n        case ThumbnailsPosition.Bottom:\r\n          direction = Hammer.DIRECTION_HORIZONTAL;\r\n          break;\r\n      }\r\n\r\n      // Activate gestures\r\n      this._hammer = new Hammer(this._el.nativeElement);\r\n      this._hammer.get('pan').set({direction});\r\n\r\n      this._zone.runOutsideAngular(() => {\r\n        // Move the slider\r\n        switch (this.config.thumbMode) {\r\n          case ThumbnailsMode.Strict:\r\n            this._hammer.on('pan', (e) => this.strictMode(e));\r\n            break;\r\n          case ThumbnailsMode.Free:\r\n            this._hammer.on('pan', (e) => this.freeMode(e));\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._hammer) {\r\n      this._hammer.destroy();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sliding strict mode\r\n   */\r\n  private strictMode(e) {\r\n    switch (this.config.thumbPosition) {\r\n      case ThumbnailsPosition.Right:\r\n      case ThumbnailsPosition.Left:\r\n        this.updateSlider({value: e.deltaY, active: true});\r\n        if (e.isFinal) {\r\n          this.updateSlider({value: 0, active: false});\r\n          this.verticalPan(e);\r\n        }\r\n        break;\r\n      case ThumbnailsPosition.Top:\r\n      case ThumbnailsPosition.Bottom:\r\n        this.updateSlider({value: e.deltaX, active: true});\r\n        if (e.isFinal) {\r\n          this.updateSlider({value: 0, active: false});\r\n          this.horizontalPan(e);\r\n        }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sliding free mode\r\n   */\r\n  private freeMode(e) {\r\n    switch (this.config.thumbPosition) {\r\n      case ThumbnailsPosition.Right:\r\n      case ThumbnailsPosition.Left:\r\n        this.updateSlider({value: this._freeModeCurrentOffset + e.deltaY, active: true});\r\n        if (e.isFinal) {\r\n          if (this.minFreeScrollExceeded(e.deltaY, this.config.thumbWidth, this.config.thumbHeight)) {\r\n            this._freeModeCurrentOffset = -(this.state.items.length - 1 - this.state.currIndex) * this.config.thumbHeight;\r\n          } else if (this.maxFreeScrollExceeded(e.deltaY, this.config.thumbHeight, this.config.thumbWidth)) {\r\n            this._freeModeCurrentOffset = this.state.currIndex * this.config.thumbHeight;\r\n          } else {\r\n            this._freeModeCurrentOffset += e.deltaY;\r\n          }\r\n          this.updateSlider({value: this._freeModeCurrentOffset, active: false});\r\n        }\r\n        break;\r\n      case ThumbnailsPosition.Top:\r\n      case ThumbnailsPosition.Bottom:\r\n        this.updateSlider({value: this._freeModeCurrentOffset + e.deltaX, active: true});\r\n        if (e.isFinal) {\r\n          if (this.minFreeScrollExceeded(e.deltaX, this.config.thumbHeight, this.config.thumbWidth)) {\r\n            this._freeModeCurrentOffset = -(this.state.items.length - 1 - this.state.currIndex) * this.config.thumbWidth;\r\n          } else if (this.maxFreeScrollExceeded(e.deltaX, this.config.thumbWidth, this.config.thumbHeight)) {\r\n            this._freeModeCurrentOffset = this.state.currIndex * this.config.thumbWidth;\r\n          } else {\r\n            this._freeModeCurrentOffset += e.deltaX;\r\n          }\r\n          this.updateSlider({value: this._freeModeCurrentOffset, active: false});\r\n        }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if the minimum free scroll is exceeded (used in Bottom, Left directions)\r\n   */\r\n  private minFreeScrollExceeded(delta: number, width: number, height: number): boolean {\r\n    return -(this._freeModeCurrentOffset + delta - width / 2) > (this.state.items.length - this.state.currIndex) * height;\r\n  }\r\n\r\n  /**\r\n   * Check if the maximum free scroll is exceeded (used in Top, Right directions)\r\n   */\r\n  private maxFreeScrollExceeded(delta: number, width: number, height: number): boolean {\r\n    return this._freeModeCurrentOffset + delta > (this.state.currIndex * width) + (height / 2);\r\n  }\r\n\r\n  /**\r\n   * Convert sliding state to styles\r\n   */\r\n  private getSliderStyles(state: WorkerState): any {\r\n    let value: number;\r\n    switch (this.config.thumbPosition) {\r\n      case ThumbnailsPosition.Top:\r\n      case ThumbnailsPosition.Bottom:\r\n        this.width = '100%';\r\n        this.height = this.config.thumbHeight + 'px';\r\n        value = -(this.state.currIndex * this.config.thumbWidth) - (this.config.thumbWidth / 2 - state.value);\r\n        return {\r\n          transform: `translate3d(${value}px, 0, 0)`,\r\n          width: this.state.items.length * this.config.thumbWidth + 'px',\r\n          height: '100%'\r\n        };\r\n      case ThumbnailsPosition.Left:\r\n      case ThumbnailsPosition.Right:\r\n        this.width = this.config.thumbWidth + 'px';\r\n        this.height = '100%';\r\n        value = -(this.state.currIndex * this.config.thumbHeight) - (this.config.thumbHeight / 2 - state.value);\r\n        return {\r\n          transform: `translate3d(0, ${value}px, 0)`,\r\n          width: '100%',\r\n          height: this.state.items.length * this.config.thumbHeight + 'px'\r\n        };\r\n    }\r\n  }\r\n\r\n  private verticalPan(e: any) {\r\n    if (!(e.direction & Hammer.DIRECTION_UP && e.offsetDirection & Hammer.DIRECTION_VERTICAL)) {\r\n      return;\r\n    }\r\n    if (e.velocityY > 0.3) {\r\n      this.prev();\r\n    } else if (e.velocityY < -0.3) {\r\n      this.next();\r\n    } else {\r\n      if (e.deltaY / 2 <= -this.config.thumbHeight * this.state.items.length / this.config.panSensitivity) {\r\n        this.next();\r\n      } else if (e.deltaY / 2 >= this.config.thumbHeight * this.state.items.length / this.config.panSensitivity) {\r\n        this.prev();\r\n      } else {\r\n        this.action.emit(this.state.currIndex);\r\n      }\r\n    }\r\n  }\r\n\r\n  private horizontalPan(e: any) {\r\n    if (!(e.direction & Hammer.DIRECTION_HORIZONTAL && e.offsetDirection & Hammer.DIRECTION_HORIZONTAL)) {\r\n      return;\r\n    }\r\n    if (e.velocityX > 0.3) {\r\n      this.prev();\r\n    } else if (e.velocityX < -0.3) {\r\n      this.next();\r\n    } else {\r\n      if (e.deltaX / 2 <= -this.config.thumbWidth * this.state.items.length / this.config.panSensitivity) {\r\n        this.next();\r\n      } else if (e.deltaX / 2 >= this.config.thumbWidth * this.state.items.length / this.config.panSensitivity) {\r\n        this.prev();\r\n      } else {\r\n        this.action.emit(this.state.currIndex);\r\n      }\r\n    }\r\n  }\r\n\r\n  private next() {\r\n    this.action.emit('next');\r\n  }\r\n\r\n  private prev() {\r\n    this.action.emit('prev');\r\n  }\r\n\r\n  private updateSlider(state: WorkerState) {\r\n    const newState: WorkerState = {...this._slidingWorker$.value, ...state};\r\n    this._slidingWorker$.next(newState);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  OnDestroy,\r\n  OnInit,\r\n  OnChanges,\r\n  Inject,\r\n  NgZone,\r\n  ElementRef,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  PLATFORM_ID\r\n} from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\nimport { BehaviorSubject, Observable, Subscription, fromEvent } from 'rxjs';\r\nimport { map, tap, debounceTime } from 'rxjs/operators';\r\nimport { GalleryState, GalleryError } from '../models/gallery.model';\r\nimport { GalleryConfig } from '../models/config.model';\r\nimport { SlidingDirection } from '../models/constants';\r\nimport { SliderState, WorkerState } from '../models/slider.model';\r\n\r\ndeclare const Hammer: any;\r\n\r\n@Component({\r\n  selector: 'gallery-slider',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <div *ngIf=\"sliderState$ | async; let sliderState\"\r\n         class=\"g-items-container\"\r\n         [ngStyle]=\"zoom\">\r\n\r\n      <div class=\"g-slider\"\r\n           [class.g-no-transition]=\"sliderState.active\"\r\n           [ngStyle]=\"sliderState.style\">\r\n\r\n        <gallery-item *ngFor=\"let item of state.items; let i = index\"\r\n                      [type]=\"item.type\"\r\n                      [config]=\"config\"\r\n                      [data]=\"item.data\"\r\n                      [currIndex]=\"state.currIndex\"\r\n                      [index]=\"i\"\r\n                      (tapClick)=\"itemClick.emit(i)\"\r\n                      (error)=\"error.emit({itemIndex: i, error: $event})\">\r\n        </gallery-item>\r\n\r\n      </div>\r\n    </div>\r\n    <ng-content></ng-content>\r\n  `\r\n})\r\nexport class GallerySliderComponent implements OnInit, OnChanges, OnDestroy {\r\n\r\n  /** Sliding worker */\r\n  private readonly _slidingWorker$ = new BehaviorSubject<WorkerState>({value: 0, active: false});\r\n\r\n  /** HammerJS instance */\r\n  private _hammer: any;\r\n\r\n  /** Stream that emits when the view is re-sized */\r\n  private _resizeSub$: Subscription;\r\n\r\n  /** Stream that emits sliding state */\r\n  sliderState$: Observable<SliderState>;\r\n\r\n  /** Gallery state */\r\n  @Input() state: GalleryState;\r\n\r\n  /** Gallery config */\r\n  @Input() config: GalleryConfig;\r\n\r\n  /** Stream that emits when the active item should change */\r\n  @Output() action = new EventEmitter<string | number>();\r\n\r\n  /** Stream that emits when item is clicked */\r\n  @Output() itemClick = new EventEmitter<number>();\r\n\r\n  /** Stream that emits when an error occurs */\r\n  @Output() error = new EventEmitter<GalleryError>();\r\n\r\n  /** Item zoom */\r\n  get zoom() {\r\n    return {transform: `perspective(50px) translate3d(0, 0, ${-this.config.zoomOut}px)`};\r\n  }\r\n\r\n  constructor(private _el: ElementRef, private _zone: NgZone, @Inject(PLATFORM_ID) private platform: Object) {\r\n\r\n    // Activate sliding worker\r\n    this.sliderState$ = this._slidingWorker$.pipe(map((state: WorkerState) => ({\r\n      style: this.getSliderStyles(state),\r\n      active: state.active\r\n    })));\r\n  }\r\n\r\n  ngOnChanges() {\r\n    // Refresh the slider\r\n    this.updateSlider({value: 0, active: false});\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.config.gestures && typeof Hammer !== 'undefined') {\r\n\r\n      const direction = this.config.slidingDirection === SlidingDirection.Horizontal\r\n        ? Hammer.DIRECTION_HORIZONTAL\r\n        : Hammer.DIRECTION_VERTICAL;\r\n\r\n      // Activate gestures\r\n      this._hammer = new Hammer(this._el.nativeElement);\r\n      this._hammer.get('pan').set({direction});\r\n\r\n      this._zone.runOutsideAngular(() => {\r\n        // Move the slider\r\n        this._hammer.on('pan', (e) => {\r\n\r\n          switch (this.config.slidingDirection) {\r\n            case SlidingDirection.Horizontal:\r\n              this.updateSlider({value: e.deltaX, active: true});\r\n              if (e.isFinal) {\r\n                this.updateSlider({value: 0, active: false});\r\n                this.horizontalPan(e);\r\n              }\r\n              break;\r\n            case SlidingDirection.Vertical:\r\n              this.updateSlider({value: e.deltaY, active: true});\r\n              if (e.isFinal) {\r\n                this.updateSlider({value: 0, active: false});\r\n                this.verticalPan(e);\r\n              }\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    // Rearrange slider on window resize\r\n    if (isPlatformBrowser(this.platform)) {\r\n      this._resizeSub$ = fromEvent(window, 'resize').pipe(\r\n        debounceTime(200),\r\n        tap(() => this.updateSlider(this._slidingWorker$.value))\r\n      ).subscribe();\r\n    }\r\n\r\n    setTimeout(() => this.updateSlider({value: 0, active: false}));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._hammer) {\r\n      this._hammer.destroy();\r\n    }\r\n    if (this._resizeSub$) {\r\n      this._resizeSub$.unsubscribe();\r\n    }\r\n    this._slidingWorker$.complete();\r\n  }\r\n\r\n  /**\r\n   * Convert sliding state to styles\r\n   */\r\n  private getSliderStyles(state: WorkerState): any {\r\n    switch (this.config.slidingDirection) {\r\n      case SlidingDirection.Horizontal:\r\n        return {\r\n          transform: `translate3d(${-(this.state.currIndex * this._el.nativeElement.offsetWidth) + state.value}px, 0, 0)`,\r\n          width: `calc(100% * ${this.state.items.length})`,\r\n          height: '100%'\r\n        };\r\n      case SlidingDirection.Vertical:\r\n        return {\r\n          transform: `translate3d(0, ${-(this.state.currIndex * this._el.nativeElement.offsetHeight) + state.value}px, 0)`,\r\n          width: '100%',\r\n          height: `calc(100% * ${this.state.items.length})`,\r\n        };\r\n    }\r\n  }\r\n\r\n  private verticalPan(e) {\r\n    if (!(e.direction & Hammer.DIRECTION_UP && e.offsetDirection & Hammer.DIRECTION_VERTICAL)) {\r\n      return;\r\n    }\r\n    if (e.velocityY > 0.3) {\r\n      this.prev();\r\n    } else if (e.velocityY < -0.3) {\r\n      this.next();\r\n    } else {\r\n      if (e.deltaY / 2 <= -this._el.nativeElement.offsetHeight * this.state.items.length / this.config.panSensitivity) {\r\n        this.next();\r\n      } else if (e.deltaY / 2 >= this._el.nativeElement.offsetHeight * this.state.items.length / this.config.panSensitivity) {\r\n        this.prev();\r\n      } else {\r\n        this.action.emit(this.state.currIndex);\r\n      }\r\n    }\r\n  }\r\n\r\n  private horizontalPan(e) {\r\n    if (!(e.direction & Hammer.DIRECTION_HORIZONTAL && e.offsetDirection & Hammer.DIRECTION_HORIZONTAL)) {\r\n      return;\r\n    }\r\n    if (e.velocityX > 0.3) {\r\n      this.prev();\r\n    } else if (e.velocityX < -0.3) {\r\n      this.next();\r\n    } else {\r\n      if (e.deltaX / 2 <= -this._el.nativeElement.offsetWidth * this.state.items.length / this.config.panSensitivity) {\r\n        this.next();\r\n      } else if (e.deltaX / 2 >= this._el.nativeElement.offsetWidth * this.state.items.length / this.config.panSensitivity) {\r\n        this.prev();\r\n      } else {\r\n        this.action.emit(this.state.currIndex);\r\n      }\r\n    }\r\n  }\r\n\r\n  private next() {\r\n    this.action.emit('next');\r\n  }\r\n\r\n  private prev() {\r\n    this.action.emit('prev');\r\n  }\r\n\r\n  private updateSlider(state: WorkerState) {\r\n    const newState: WorkerState = {...this._slidingWorker$.value, ...state};\r\n    this._slidingWorker$.next(newState);\r\n  }\r\n}\r\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\r\nimport { GalleryState } from '../models/gallery.model';\r\n\r\n@Component({\r\n  selector: 'gallery-counter',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <div class=\"g-counter\">{{(state.currIndex + 1) + '/' + state.items.length}}</div>\r\n  `\r\n})\r\nexport class GalleryCounterComponent {\r\n  @Input() state: GalleryState;\r\n}\r\n","import { Component, Input, ChangeDetectionStrategy, HostBinding, Output, EventEmitter } from '@angular/core';\r\nimport { GalleryConfig } from '../models/config.model';\r\nimport { LoadingStrategy, GalleryItemType } from '../models/constants';\r\n\r\n@Component({\r\n  selector: 'gallery-item',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <ng-container *ngIf=\"load\" [ngSwitch]=\"type\">\r\n\r\n      <ng-container *ngSwitchCase=\"Types.Image\">\r\n\r\n        <gallery-image [src]=\"data.src\"\r\n                       [mode]=\"config.loadingMode\"\r\n                       [loadingIcon]=\"config.loadingIcon\"\r\n                       [loadingError]=\"config.loadingError\"\r\n                       (error)=\"error.emit($event)\"></gallery-image>\r\n\r\n        <div class=\"g-template g-item-template\">\r\n          <ng-container *ngTemplateOutlet=\"config.itemTemplate;\r\n          context: { index: this.index, currIndex: this.currIndex, type: this.type, data: this.data }\">\r\n          </ng-container>\r\n        </div>\r\n\r\n      </ng-container>\r\n\r\n      <gallery-video *ngSwitchCase=\"Types.Video\"\r\n                     [src]=\"data.src\"\r\n                     [poster]=\"data.poster\"\r\n                     [pause]=\"currIndex !== index\"\r\n                     (error)=\"error.emit($event)\"></gallery-video>\r\n\r\n      <gallery-iframe *ngSwitchCase=\"Types.Youtube\"\r\n                      [src]=\"data.src\"\r\n                      [pause]=\"currIndex !== index\"></gallery-iframe>\r\n\r\n      <gallery-iframe *ngSwitchCase=\"Types.Iframe\"\r\n                      [src]=\"data.src\"></gallery-iframe>\r\n\r\n      <ng-container *ngSwitchDefault>\r\n\r\n        <div class=\"g-template g-item-template\">\r\n          <ng-container *ngTemplateOutlet=\"config.itemTemplate;\r\n          context: { index: this.index, currIndex: this.currIndex, type: this.type, data: this.data }\">\r\n          </ng-container>\r\n        </div>\r\n\r\n      </ng-container>\r\n\r\n    </ng-container>\r\n  `\r\n})\r\nexport class GalleryItemComponent {\r\n\r\n  readonly Types = GalleryItemType;\r\n\r\n  /** Gallery config */\r\n  @Input() config: GalleryConfig;\r\n\r\n  /** Item's index in the gallery */\r\n  @Input() index: number;\r\n\r\n  /** Gallery current index */\r\n  @Input() currIndex: number;\r\n\r\n  /** Item's type 'image', 'video', 'youtube', 'iframe' */\r\n  @Input() type: string;\r\n\r\n  /** Item's data, this object contains the data required to display the content (e.g. src path) */\r\n  @Input() data: any;\r\n\r\n  /** Stream that emits when an error occurs */\r\n  @Output() error = new EventEmitter<Error>();\r\n\r\n  @HostBinding('class.g-active-item') get isActive() {\r\n    return this.index === this.currIndex;\r\n  }\r\n\r\n  get load() {\r\n    switch (this.config.loadingStrategy) {\r\n      case LoadingStrategy.Preload:\r\n        return true;\r\n      case LoadingStrategy.Lazy:\r\n        return this.currIndex === this.index;\r\n      default:\r\n        return this.currIndex === this.index || this.currIndex === this.index - 1 || this.currIndex === this.index + 1;\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, Input, ChangeDetectionStrategy, HostBinding, Output, EventEmitter } from '@angular/core';\r\nimport { GalleryConfig } from '../models/config.model';\r\n\r\n@Component({\r\n  selector: 'gallery-thumb',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <gallery-image [src]=\"data.thumb\" \r\n                   mode=\"indeterminate\"\r\n                   [isThumbnail]=\"true\" \r\n                   [loadingIcon]=\"config.thumbLoadingIcon\"\r\n                   [loadingError]=\"config.thumbLoadingError \"\r\n                   (error)=\"error.emit($event)\"></gallery-image>\r\n\r\n    <div *ngIf=\"config.thumbTemplate\" class=\"g-template g-thumb-template\">\r\n      <ng-container\r\n        *ngTemplateOutlet=\"config.thumbTemplate; context: { index: this.index, type: this.type, data: this.data }\">\r\n      </ng-container>\r\n    </div>\r\n  `\r\n})\r\nexport class GalleryThumbComponent {\r\n\r\n  @Input() config: GalleryConfig;\r\n\r\n  /** Item's index in the gallery */\r\n  @Input() index: number;\r\n\r\n  /** Gallery current index */\r\n  @Input() currIndex: number;\r\n\r\n  /** Item's type 'image', 'video', 'youtube', 'iframe' */\r\n  @Input() type: string;\r\n\r\n  /** Item's data, this object contains the data required to display the content (e.g. src path) */\r\n  @Input() data: any;\r\n\r\n  @Output() error = new EventEmitter<Error>();\r\n\r\n  @HostBinding('class.g-active-thumb') get isActive() {\r\n    return this.index === this.currIndex;\r\n  }\r\n\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'radial-progress',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {\r\n    '[attr.mode]': 'mode',\r\n    '[style.width.px]': 'diameter',\r\n    '[style.height.px]': 'diameter'\r\n  },\r\n  template: `\r\n    <svg class=\"radial-progress\"\r\n         [style.width.px]=\"diameter\"\r\n         [style.height.px]=\"diameter\"\r\n         [attr.viewBox]=\"viewBox\"\r\n         preserveAspectRatio=\"xMidYMid meet\"\r\n         focusable=\"false\">\r\n\r\n      <circle class=\"radial-progress-meter\"\r\n              cx=\"50%\"\r\n              cy=\"50%\"\r\n              [attr.r]=\"circleRadius\"\r\n              [style.stroke-width.%]=\"circleStrokeWidth\"/>\r\n\r\n      <circle class=\"radial-progress-value\"\r\n              cx=\"50%\"\r\n              cy=\"50%\"\r\n              [attr.r]=\"circleRadius\"\r\n              [style.stroke-dashoffset.px]=\"strokeDashOffset\"\r\n              [style.stroke-dasharray.px]=\"strokeCircumference\"\r\n              [style.stroke-width.%]=\"circleStrokeWidth\"/>\r\n    </svg>\r\n  `\r\n})\r\nexport class RadialProgressComponent {\r\n\r\n  @Input() mode: 'determinate' | 'indeterminate' = 'determinate';\r\n  @Input() value = 0;\r\n  @Input() diameter = 60;\r\n  @Input() strokeWidth = 3;\r\n\r\n  /** The radius of the spinner, adjusted for stroke width. */\r\n  get circleRadius() {\r\n    return (this.diameter - this.strokeWidth) / 2;\r\n  }\r\n\r\n  /** The view box of the spinner's svg element. */\r\n  get viewBox() {\r\n    const viewBox = this.circleRadius * 2 + this.strokeWidth;\r\n    return `0 0 ${viewBox} ${viewBox}`;\r\n  }\r\n\r\n  /** The stroke circumference of the svg circle. */\r\n  get strokeCircumference(): number {\r\n    return 2 * Math.PI * this.circleRadius;\r\n  }\r\n\r\n  /** The dash offset of the svg circle. */\r\n  get strokeDashOffset() {\r\n    if (this.mode === 'determinate') {\r\n      return this.strokeCircumference * (100 - this.value) / 100;\r\n    }\r\n\r\n    // In fallback mode set the circle to 60% and rotate it with CSS.\r\n    if (this.mode === 'indeterminate') {\r\n      return this.strokeCircumference * 0.4;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /** Stroke width of the circle in percent. */\r\n  get circleStrokeWidth() {\r\n    return this.strokeWidth / this.diameter * 100;\r\n  }\r\n\r\n}\r\n","import { Directive, Input, Output, OnDestroy, SimpleChanges, OnChanges, EventEmitter, Inject } from '@angular/core';\r\nimport { HttpClient, HttpEventType, HttpRequest, HttpEvent, HttpHeaders } from '@angular/common/http';\r\nimport { Subject, Observable, Subscription, zip, fromEvent, EMPTY } from 'rxjs';\r\nimport { tap, switchMap, catchError } from 'rxjs/operators';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n@Directive({\r\n  selector: '[lazyImage]'\r\n})\r\nexport class LazyImage implements OnChanges, OnDestroy {\r\n\r\n  private _imageLoader$ = new Subject<string>();\r\n  private _loaderSub$ = Subscription.EMPTY;\r\n\r\n  @Input('lazyImage') src: string;\r\n\r\n  @Input() mode: 'determinate' | 'indeterminate';\r\n\r\n  @Output() progress = new EventEmitter<{ loaded: number, total: number }>();\r\n  @Output() loaded = new EventEmitter<string>();\r\n  @Output() error = new EventEmitter<Error>();\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    @Inject(DOCUMENT) private document: any\r\n  ) {\r\n    this._loaderSub$ = this._imageLoader$.pipe(\r\n      switchMap((imageSrc: string) => this.mode === 'determinate' ? this.progressiveLoader(imageSrc) : this.nativeLoader(imageSrc))\r\n    ).subscribe();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes['src'] && changes['src'].previousValue !== changes['src'].currentValue) {\r\n      this.loadImage(this.src);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._loaderSub$.unsubscribe();\r\n    this._imageLoader$.complete();\r\n  }\r\n\r\n  loadImage(imagePath: string) {\r\n    this._imageLoader$.next(imagePath);\r\n  }\r\n\r\n  /**\r\n   * Load image using HttpClient, This requires XHR access to the URL\r\n   * @param url\r\n   */\r\n  progressiveLoader(url: string): Observable<any> {\r\n    const downloadImage = new HttpRequest('GET', url, {\r\n      reportProgress: true,\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({ 'CACHE_GALLERY_IMAGE': 'true' })\r\n    });\r\n    return this.http.request(downloadImage).pipe(\r\n      tap((event: HttpEvent<string>) => {\r\n\r\n        if (event.type === HttpEventType.DownloadProgress) {\r\n          this.progress.emit({ loaded: event.loaded, total: event.total });\r\n        }\r\n\r\n        if (event.type === HttpEventType.Response) {\r\n          this.loaded.emit(URL.createObjectURL(event.body));\r\n        }\r\n\r\n      }),\r\n      catchError((err: Error) => {\r\n        this.error.emit(err);\r\n        return EMPTY;\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Native image loader, does not emit progress\r\n   * @param url\r\n   */\r\n  nativeLoader(url: string): Observable<any> {\r\n    const img = this.document.createElement('img');\r\n    // Stop previously loading\r\n    img.src = url;\r\n    // Image load success\r\n    const loadSuccess = fromEvent(img, 'load').pipe(\r\n      tap(() => this.loaded.emit(url))\r\n    );\r\n    // Image load failed\r\n    const loadError = fromEvent(img, 'error').pipe(\r\n      tap(() => this.error.emit(new Error(`[lazyImage]: The image ${url} did not load`)))\r\n    );\r\n    return zip(loadSuccess, loadError);\r\n  }\r\n\r\n}\r\n","import { Directive, Input, OnDestroy, OnInit, Output, ElementRef, EventEmitter } from '@angular/core';\r\nimport { fromEvent, Subscription } from 'rxjs';\r\nimport { filter, tap } from 'rxjs/operators';\r\n\r\ndeclare const Hammer: any;\r\n\r\n/**\r\n * This directive uses tap event if HammerJS is loaded, otherwise it falls back to normal click event\r\n */\r\n@Directive({\r\n  selector: '[tapClick]'\r\n})\r\nexport class TapClick implements OnInit, OnDestroy {\r\n\r\n  private _hammer: any;\r\n  clickListener = Subscription.EMPTY;\r\n  @Input() tapClickDisabled: boolean;\r\n  @Output() tapClick = new EventEmitter();\r\n\r\n  constructor(private _el: ElementRef) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.activateClickEvent();\r\n  }\r\n\r\n  activateClickEvent() {\r\n    if (typeof Hammer !== 'undefined') {\r\n      // Use Hammer.js tap event\r\n      this._hammer = new Hammer(this._el.nativeElement);\r\n      this._hammer.on('tap', () => {\r\n        if (!this.tapClickDisabled) {\r\n          this.tapClick.emit(null);\r\n        }\r\n      });\r\n    } else {\r\n      // Use normal click event\r\n      this.clickListener = fromEvent(this._el.nativeElement, 'click').pipe(\r\n        filter(() => !this.tapClickDisabled),\r\n        tap(() => this.tapClick.emit(null))\r\n      ).subscribe();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._hammer) {\r\n      this._hammer.destroy();\r\n    }\r\n    this.clickListener.unsubscribe();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpResponse } from '@angular/common/http';\r\n\r\nexport interface RequestCacheEntry {\r\n  url: string;\r\n  response: HttpResponse<any>;\r\n  lastRead: number;\r\n}\r\n\r\nexport abstract class RequestCache {\r\n  abstract get(req: HttpRequest<any>): HttpResponse<any> | undefined;\r\n\r\n  abstract put(req: HttpRequest<any>, response: HttpResponse<any>): void;\r\n}\r\n\r\nconst maxAge = 30000; // maximum cache age (ms)\r\n\r\n@Injectable()\r\nexport class RequestCacheWithMap implements RequestCache {\r\n  cache = new Map<string, RequestCacheEntry>();\r\n\r\n  get(req: HttpRequest<any>): HttpResponse<any> | undefined {\r\n    const url = req.urlWithParams;\r\n    const cached = this.cache.get(url);\r\n\r\n    if (!cached) {\r\n      return undefined;\r\n    }\r\n    return cached.response;\r\n  }\r\n\r\n  put(req: HttpRequest<any>, response: HttpResponse<any>): void {\r\n    const url = req.urlWithParams;\r\n\r\n    const entry = {url, response, lastRead: Date.now()};\r\n    this.cache.set(url, entry);\r\n\r\n    // remove expired cache entries\r\n    const expired = Date.now() - maxAge;\r\n    this.cache.forEach((entry: any) => {\r\n      if (entry.lastRead < expired) {\r\n        this.cache.delete(entry.url);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpHandler, HttpRequest, HttpResponse, HttpInterceptor } from '@angular/common/http';\r\n\r\nimport { Observable, of } from 'rxjs';\r\nimport { startWith, tap } from 'rxjs/operators';\r\n\r\nimport { RequestCache } from './cache.service';\r\n\r\n/**\r\n * If request is cachable (e.g., package search) and\r\n * response is in cache return the cached response as observable.\r\n *\r\n * If not in cache or not cachable,\r\n * pass request through to next()\r\n */\r\n\r\n@Injectable()\r\nexport class CachingInterceptor implements HttpInterceptor {\r\n  constructor(private cache: RequestCache) {\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    if (req.headers.has('CACHE_GALLERY_IMAGE') && isCachable(req)) {\r\n\r\n      const cachedResponse = this.cache.get(req);\r\n\r\n      // cache-then-refresh\r\n      if (req.headers.get('x-refresh')) {\r\n        const results$ = sendRequest(req, next, this.cache);\r\n        return cachedResponse\r\n          ? results$.pipe(startWith(cachedResponse))\r\n          : results$;\r\n      }\r\n      // cache-or-fetch\r\n      return cachedResponse\r\n        ? of(cachedResponse)\r\n        : sendRequest(req, next, this.cache);\r\n    }\r\n    return next.handle(req);\r\n  }\r\n}\r\n\r\n/** Is this request cachable? */\r\nfunction isCachable(req: HttpRequest<any>) {\r\n  // Only GET requests are cachable\r\n  return req.method === 'GET';\r\n}\r\n\r\n/**\r\n * Get server response observable by sending request to `next()`.\r\n * Will add the response to the cache on the way out.\r\n */\r\nfunction sendRequest(req: HttpRequest<any>, next: HttpHandler, cache: RequestCache): Observable<HttpEvent<any>> {\r\n  const request = req.clone({headers: req.headers.delete('CACHE_GALLERY_IMAGE')});\r\n  return next.handle(request).pipe(\r\n    tap(event => {\r\n      // There may be other events besides the response.\r\n      if (event instanceof HttpResponse) {\r\n        cache.put(req, event); // Update the cache.\r\n      }\r\n    })\r\n  );\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\n\r\nimport { GalleryConfig, GALLERY_CONFIG } from './models/config.model';\r\n\r\nimport { GalleryComponent } from './components/gallery.component';\r\nimport { GalleryNavComponent } from './components/gallery-nav.component';\r\nimport { GalleryCoreComponent } from './components/gallery-core.component';\r\nimport { GalleryDotsComponent } from './components/gallery-dots.component';\r\nimport { GalleryThumbsComponent } from './components/gallery-thumbs.component';\r\nimport { GallerySliderComponent } from './components/gallery-slider.component';\r\nimport { GalleryCounterComponent } from './components/gallery-counter.component';\r\n\r\nimport { GalleryItemComponent } from './components/gallery-item.component';\r\nimport { GalleryThumbComponent } from './components/gallery-thumb.component';\r\nimport { GalleryImageComponent } from './components/templates/gallery-image.component';\r\nimport { GalleryVideoComponent } from './components/templates/gallery-video.component';\r\nimport { GalleryIframeComponent } from './components/templates/gallery-iframe.component';\r\nimport { RadialProgressComponent } from './components/templates/radial-progress.component';\r\n\r\nimport { LazyImage } from './directives/lazy-image';\r\nimport { TapClick } from './directives/tap-click';\r\nimport { CachingInterceptor } from './services/cache.interceptor';\r\nimport { RequestCache, RequestCacheWithMap } from './services/cache.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [\r\n    {provide: RequestCache, useClass: RequestCacheWithMap},\r\n    {provide: HTTP_INTERCEPTORS, useClass: CachingInterceptor, multi: true}\r\n  ],\r\n  declarations: [\r\n    GalleryComponent,\r\n    GalleryNavComponent,\r\n    GalleryDotsComponent,\r\n    GalleryCoreComponent,\r\n    GallerySliderComponent,\r\n    GalleryCounterComponent,\r\n    GalleryThumbsComponent,\r\n    GalleryThumbComponent,\r\n    GalleryItemComponent,\r\n    GalleryImageComponent,\r\n    GalleryVideoComponent,\r\n    GalleryIframeComponent,\r\n    RadialProgressComponent,\r\n    LazyImage,\r\n    TapClick\r\n  ],\r\n  exports: [\r\n    GalleryComponent,\r\n    LazyImage,\r\n    TapClick,\r\n  ]\r\n})\r\nexport class GalleryModule {\r\n  static withConfig(config: GalleryConfig): ModuleWithProviders {\r\n\r\n    return {\r\n      ngModule: GalleryModule,\r\n      providers: [\r\n        {\r\n          provide: GALLERY_CONFIG,\r\n          useValue: config\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n"]}