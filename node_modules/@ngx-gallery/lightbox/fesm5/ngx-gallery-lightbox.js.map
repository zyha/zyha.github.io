{"version":3,"file":"ngx-gallery-lightbox.js.map","sources":["ng://@ngx-gallery/lightbox/lib/lightbox.model.ts","ng://@ngx-gallery/lightbox/lib/lightbox.animation.ts","ng://@ngx-gallery/lightbox/lib/lightbox.component.ts","ng://@ngx-gallery/lightbox/lib/lightbox.default.ts","ng://@ngx-gallery/lightbox/lib/lightbox.service.ts","ng://@ngx-gallery/lightbox/lib/lightbox.directive.ts","ng://@ngx-gallery/lightbox/lib/lightbox.module.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\r\n\r\nexport const LIGHTBOX_CONFIG = new InjectionToken<LightboxConfig>('lightboxConfig');\r\n\r\nexport interface LightboxConfig {\r\n  backdropClass?: string;\r\n  panelClass?: string;\r\n  hasBackdrop?: boolean;\r\n  keyboardShortcuts?: boolean;\r\n  closeIcon?: string;\r\n  role?: string;\r\n  ariaLabelledBy?: string;\r\n  ariaLabel?: string;\r\n  ariaDescribedBy?: string;\r\n}\r\n","import { animate, state, style, transition, trigger } from '@angular/animations';\r\n\r\nexport const lightboxAnimation = trigger('lightbox', [\r\n  // Note: The `enter` animation transitions to `transform: none`, because for some reason\r\n  // specifying the transform explicitly, causes IE both to blur the dialog content and\r\n  // decimate the animation performance. Leaving it as `none` solves both issues.\r\n  state('void, exit', style({opacity: 0, transform: 'scale(0.7)'})),\r\n  state('enter', style({transform: 'none'})),\r\n  transition('* => enter', animate('150ms cubic-bezier(0, 0, 0.2, 1)',\r\n    style({transform: 'none', opacity: 1}))),\r\n  transition('* => void, * => exit',\r\n    animate('75ms cubic-bezier(0.4, 0.0, 0.2, 1)', style({opacity: 0}))),\r\n]);\r\n\r\n","import { Component, Optional, ChangeDetectionStrategy, ElementRef, Inject } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { AnimationEvent } from '@angular/animations';\r\nimport { OverlayRef } from '@angular/cdk/overlay';\r\nimport { FocusTrap, FocusTrapFactory } from '@angular/cdk/a11y';\r\nimport { lightboxAnimation } from './lightbox.animation';\r\n\r\n@Component({\r\n  selector: 'lightbox',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [lightboxAnimation],\r\n  styleUrls: ['./lightbox.component.scss'],\r\n  template: `\r\n    <gallery [id]=\"id\" [destroyRef]=\"false\" [skipInitConfig]=\"true\">\r\n      <i class=\"g-btn-close\" aria-label=\"Close\" (click)=\"overlayRef.detach()\"\r\n         [innerHTML]=\"sanitizer.bypassSecurityTrustHtml(closeIcon)\"></i>\r\n    </gallery>\r\n  `,\r\n  host: {\r\n    'tabindex': '-1',\r\n    'aria-modal': 'true',\r\n    '[attr.id]': '\"lightbox-\" + id',\r\n    '[attr.role]': 'role',\r\n    '[attr.aria-labelledby]': 'ariaLabel ? null : ariaLabelledBy',\r\n    '[attr.aria-label]': 'ariaLabel',\r\n    '[attr.aria-describedby]': 'ariaDescribedBy || null',\r\n    '[@lightbox]': 'state',\r\n    '(@lightbox.done)': 'onAnimationDone($event)',\r\n  }\r\n})\r\nexport class LightboxComponent {\r\n\r\n  /** Gallery ref id */\r\n  id: string;\r\n\r\n  /** Overlay ref to close the lightbox */\r\n  overlayRef: OverlayRef;\r\n\r\n  /** Close button svg data */\r\n  closeIcon: string;\r\n\r\n  /** State of the lightbox animation. */\r\n  state: 'void' | 'enter' | 'exit' = 'enter';\r\n\r\n  /** The ARIA role of the lightbox element. */\r\n  role: string;\r\n\r\n  /** Aria label to assign to the lightbox element */\r\n  ariaLabel: string;\r\n\r\n  /** ID of the element that should be considered as the lightbox's label. */\r\n  ariaLabelledBy: string;\r\n\r\n  /** ID of the element that describes the lightbox. */\r\n  ariaDescribedBy: string;\r\n\r\n  /** The class that traps and manages focus within the lightbox. */\r\n  private _focusTrap: FocusTrap;\r\n\r\n  /** Element that was focused before the lightbox was opened. Save this to restore upon close. */\r\n  private _elementFocusedBeforeDialogWasOpened: HTMLElement;\r\n\r\n  constructor(@Optional() @Inject(DOCUMENT) private _document: any,\r\n              private _focusTrapFactory: FocusTrapFactory,\r\n              private _elementRef: ElementRef,\r\n              public sanitizer: DomSanitizer) {\r\n    this._savePreviouslyFocusedElement();\r\n  }\r\n\r\n  /** Callback, invoked whenever an animation on the host completes. */\r\n  onAnimationDone(event: AnimationEvent) {\r\n    if (event.toState === 'enter') {\r\n      this._trapFocus();\r\n    } else {\r\n      this.overlayRef.dispose();\r\n      this._restoreFocus();\r\n    }\r\n  }\r\n\r\n  /** Moves the focus inside the focus trap. */\r\n  private _trapFocus() {\r\n    if (!this._focusTrap) {\r\n      this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\r\n    }\r\n    // If were to attempt to focus immediately, then the content of the lightbox would not yet be\r\n    // ready in instances where change detection has to run first. To deal with this, we simply\r\n    // wait for the microtask queue to be empty.\r\n    this._focusTrap.focusInitialElementWhenReady();\r\n  }\r\n\r\n  /** Saves a reference to the element that was focused before the lightbox was opened. */\r\n  private _savePreviouslyFocusedElement() {\r\n    if (this._document) {\r\n      this._elementFocusedBeforeDialogWasOpened = this._document.activeElement as HTMLElement;\r\n\r\n      // Note that there is no focus method when rendering on the server.\r\n      if (this._elementRef.nativeElement.focus) {\r\n        // Move focus onto the lightbox immediately in order to prevent the user from accidentally\r\n        // opening multiple dialogs at the same time. Needs to be async, because the element\r\n        // may not be focusable immediately.\r\n        Promise.resolve().then(() => this._elementRef.nativeElement.focus());\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Restores focus to the element that was focused before the lightbox opened. */\r\n  private _restoreFocus() {\r\n    const toFocus = this._elementFocusedBeforeDialogWasOpened;\r\n\r\n    // We need the extra check, because IE can set the `activeElement` to null in some cases.\r\n    if (toFocus && typeof toFocus.focus === 'function') {\r\n      toFocus.focus();\r\n    }\r\n\r\n    if (this._focusTrap) {\r\n      this._focusTrap.destroy();\r\n    }\r\n  }\r\n}\r\n","import { LightboxConfig } from './lightbox.model';\r\n\r\nexport const defaultConfig: LightboxConfig = {\r\n  backdropClass: 'g-backdrop',\r\n  panelClass: 'g-overlay',\r\n  hasBackdrop: true,\r\n  keyboardShortcuts: true,\r\n  role: 'lightbox',\r\n  closeIcon: `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<svg width=\"512px\" height=\"512px\" enable-background=\"new 0 0 47.971 47.971\" version=\"1.1\" viewBox=\"0 0 47.971 47.971\" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t<path d=\"M28.228,23.986L47.092,5.122c1.172-1.171,1.172-3.071,0-4.242c-1.172-1.172-3.07-1.172-4.242,0L23.986,19.744L5.121,0.88   c-1.172-1.172-3.07-1.172-4.242,0c-1.172,1.171-1.172,3.071,0,4.242l18.865,18.864L0.879,42.85c-1.172,1.171-1.172,3.071,0,4.242   C1.465,47.677,2.233,47.97,3,47.97s1.535-0.293,2.121-0.879l18.865-18.864L42.85,47.091c0.586,0.586,1.354,0.879,2.121,0.879   s1.535-0.293,2.121-0.879c1.172-1.171,1.172-3.071,0-4.242L28.228,23.986z\" fill=\"#fff\"/>\r\n</svg>\r\n`\r\n};\r\n","import { ComponentRef, Inject, Injectable, Optional } from '@angular/core';\r\nimport { ComponentPortal } from '@angular/cdk/portal';\r\nimport { Overlay, OverlayRef, OverlayConfig } from '@angular/cdk/overlay';\r\nimport { LEFT_ARROW, RIGHT_ARROW, ESCAPE } from '@angular/cdk/keycodes';\r\nimport { Gallery } from '@ngx-gallery/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { LightboxConfig, LIGHTBOX_CONFIG } from './lightbox.model';\r\nimport { defaultConfig } from './lightbox.default';\r\nimport { LightboxComponent } from './lightbox.component';\r\n\r\n@Injectable()\r\nexport class Lightbox {\r\n\r\n  /** Gallery overlay ref */\r\n  private _overlayRef: OverlayRef;\r\n\r\n  /** Global config */\r\n  private _config: LightboxConfig;\r\n\r\n  /** Stream that emits when lightbox is opened */\r\n  opened = new Subject<string>();\r\n\r\n  /** Stream that emits when lightbox is closed */\r\n  closed = new Subject<string>();\r\n\r\n  constructor(@Optional() @Inject(LIGHTBOX_CONFIG) config: LightboxConfig, private _gallery: Gallery, private _overlay: Overlay) {\r\n    this._config = config ? {...defaultConfig, ...config} : defaultConfig;\r\n  }\r\n\r\n  /**\r\n   * Set Lightbox Config\r\n   * @param config - LightboxConfig\r\n   */\r\n  setConfig(config: LightboxConfig) {\r\n    this._config = {...this._config, ...config};\r\n  }\r\n\r\n  /**\r\n   * Open Lightbox Overlay\r\n   * @param i - Current Index\r\n   * @param id - Gallery ID\r\n   * @param config - Lightbox Config\r\n   */\r\n  open(i = 0, id = 'lightbox', config?: LightboxConfig) {\r\n\r\n    const _config = config ? {...this._config, ...config} : this._config;\r\n\r\n    const overlayConfig: OverlayConfig = {\r\n      backdropClass: _config.backdropClass,\r\n      panelClass: _config.panelClass,\r\n      hasBackdrop: _config.hasBackdrop,\r\n      positionStrategy: this._overlay.position().global().centerHorizontally().centerVertically(),\r\n      scrollStrategy: this._overlay.scrollStrategies.block(),\r\n      disposeOnNavigation: true\r\n    };\r\n\r\n    const galleryRef = this._gallery.ref(id);\r\n    galleryRef.set(i);\r\n\r\n    this._overlayRef = this._overlay.create(overlayConfig);\r\n\r\n    // overlay opened event\r\n    this._overlayRef.attachments().subscribe(() => this.opened.next(id));\r\n\r\n    // overlay closed event\r\n    this._overlayRef.detachments().subscribe(() => this.closed.next(id));\r\n\r\n    // Attach gallery to the overlay\r\n    const galleryPortal = new ComponentPortal(LightboxComponent);\r\n    const lightboxRef: ComponentRef<LightboxComponent> = this._overlayRef.attach(galleryPortal);\r\n\r\n    lightboxRef.instance.id = id;\r\n    lightboxRef.instance.overlayRef = this._overlayRef;\r\n    lightboxRef.instance.closeIcon = this._config.closeIcon;\r\n    lightboxRef.instance.role = this._config.role;\r\n    lightboxRef.instance.ariaLabel = this._config.ariaLabel;\r\n    lightboxRef.instance.ariaLabelledBy = this._config.ariaLabelledBy;\r\n    lightboxRef.instance.ariaDescribedBy = this._config.ariaDescribedBy;\r\n\r\n    if (_config.hasBackdrop) {\r\n      this._overlayRef.backdropClick().subscribe(() => this.close());\r\n    }\r\n\r\n    // Add keyboard shortcuts\r\n    if (_config.keyboardShortcuts) {\r\n      this._overlayRef.keydownEvents().subscribe((event: any) => {\r\n        switch (event.keyCode) {\r\n          case LEFT_ARROW:\r\n            galleryRef.prev();\r\n            break;\r\n          case RIGHT_ARROW:\r\n            galleryRef.next();\r\n            break;\r\n          case ESCAPE:\r\n            this.close();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Close Lightbox Overlay\r\n   */\r\n  close() {\r\n    if (this._overlayRef.hasAttached()) {\r\n      this._overlayRef.detach();\r\n    }\r\n  }\r\n}\r\n","import { Directive, ElementRef, OnInit, Input, OnDestroy, Renderer2 } from '@angular/core';\r\nimport { fromEvent, SubscriptionLike, Subscription } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Lightbox } from './lightbox.service';\r\n\r\n@Directive({\r\n  selector: '[lightbox]'\r\n})\r\nexport class LightboxDirective implements OnInit, OnDestroy {\r\n\r\n  clickEvent: SubscriptionLike = Subscription.EMPTY;\r\n\r\n  @Input('lightbox') index = 0;\r\n  @Input('gallery') id = 'root';\r\n\r\n  constructor(private _lightbox: Lightbox, private _el: ElementRef, private _renderer: Renderer2) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._renderer.setStyle(this._el.nativeElement, 'cursor', 'pointer');\r\n    this.clickEvent = fromEvent(this._el.nativeElement, 'click').pipe(\r\n      tap(() => this._lightbox.open(this.index, this.id))\r\n    ).subscribe();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.clickEvent.unsubscribe();\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { GalleryModule } from '@ngx-gallery/core';\r\n\r\nimport { Lightbox } from './lightbox.service';\r\nimport { LightboxComponent } from './lightbox.component';\r\nimport { LightboxDirective } from './lightbox.directive';\r\nimport { LightboxConfig, LIGHTBOX_CONFIG } from './lightbox.model';\r\n\r\n@NgModule({\r\n  imports: [\r\n    OverlayModule,\r\n    GalleryModule,\r\n    A11yModule\r\n  ],\r\n  declarations: [\r\n    LightboxComponent,\r\n    LightboxDirective\r\n  ],\r\n  exports: [\r\n    LightboxDirective\r\n  ],\r\n  providers: [\r\n    Lightbox\r\n  ],\r\n  entryComponents: [\r\n    LightboxComponent\r\n  ]\r\n})\r\nexport class LightboxModule {\r\n  static withConfig(config: LightboxConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: LightboxModule,\r\n      providers: [\r\n        {\r\n          provide: LIGHTBOX_CONFIG,\r\n          useValue: config\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}
