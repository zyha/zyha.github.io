{"version":3,"sources":["webpack:///src/app/pottery/pot-detail/pot-detail.component.html","webpack:///src/app/pottery/pot-list/pot-list.component.html","webpack:///src/app/pottery/pottery/pottery.component.html","webpack:///src/app/pottery/pot-detail-resolver.service.ts","webpack:///src/app/pottery/pot-detail/pot-detail.component.css","webpack:///src/app/pottery/pot-detail/pot-detail.component.ts","webpack:///src/app/pottery/pot-list/pot-list.component.css","webpack:///src/app/pottery/pot-list/pot-list.component.ts","webpack:///src/app/pottery/pottery-routing.module.ts","webpack:///src/app/pottery/pottery.module.ts","webpack:///src/app/pottery/pottery.service.ts","webpack:///src/app/pottery/pottery/pottery.component.css","webpack:///src/app/pottery/pottery/pottery.component.ts"],"names":["PotDetailResolverService","ps","router","route","state","name","paramMap","get","getPots","pipe","pots","navigate","providedIn","MY_IMAGEVIEWER_CONFIG","bgStyle","loadingMessage","rotateRightButton","rotateLeftButton","PotDetailComponent","gallery","cartService","galleryId","galRef","ref","getScreenSize","setConfig","thumb","loadingMode","itemTemplate","gestures","loadingIcon","data","subscribe","items","map","p","type","src","title","description","date","price","status","load","event","screenHeight","window","innerHeight","screenWidth","innerWidth","t","alert","pottery","addToCart","notInCart","selector","template","providers","provide","useValue","PotListComponent","service","kiln$","params","getKiln","potCenterRoutes","path","component","children","resolve","PotCenterRoutingModule","imports","forChild","exports","PotteryModule","withConfig","panelClass","hasBackdrop","declarations","PotsService","httpClient","TABLE_URL","set","res","console","log","kilns","handleError","error","id","find","PotteryComponent","nav","show","setDeg"],"mappings":"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","file":"pottery-pottery-module-es5.js","sourcesContent":["export default \"<!--Add custom template to image items-->\\n<h2 class=\\\"page_title\\\">{{name}}</h2>\\n\\n<div class=\\\"tiles\\\" gallerize=\\\"gal\\\" [style.width.px]=\\\"screenWidth - 190\\\" *ngIf=\\\"pots\\\">\\n\\t<div class=\\\"tile\\\" *ngFor=\\\"let pot of pots; let i = index\\\">\\n\\t\\t<div class=\\\"image_container\\\" [lightbox]=\\\"i\\\" [gallery]=\\\"galleryId\\\">\\n\\t\\t\\t<img class=\\\"image\\\" [src]=\\\"pot.src\\\" [attr.imageSrc]=\\\"pot.src\\\" [attr.thumbSrc]=\\\"pot.src\\\">\\n      <div class=\\\"image_text\\\">{{pot.description}}</div>\\n    </div>\\n\\t\\t<p class=\\\"title\\\">\\n\\t\\t\\t{{ pot.name }}\\n\\t\\t\\t<b class=\\\"date\\\">{{ pot.date }}\\n\\t\\t\\t</b>\\n\\t\\t</p>\\n\\t\\t<div class=\\\"state\\\">\\n\\t\\t\\t<i class=\\\"typestatus\\\" [ngStyle]=\\\"{'background-image':getTypeIcon(pot.type)}\\\" [title]=\\\"pot.type\\\"></i>\\n\\t\\t\\t<button class=\\\"fa fa-shopping-bag\\\" aria-hidden=\\\"true\\\" [title]=\\\"'Buy it for $'+ pot.price + '.'\\\" (click)=\\\"addToCart(pot)\\\" *ngIf=\\\"available(pot)!=0\\\">\\n\\t\\t\\t\\t{{ pot.price | currency }}\\n\\t\\t\\t</button>\\n\\t\\t\\t<button class=\\\"fa fa-share\\\" aria-hidden=\\\"true\\\" (click)=\\\"share()\\\"></button>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n<ng-template #itemTemplate\\n             let-index=\\\"index\\\"\\n             let-type=\\\"type\\\"\\n             let-data=\\\"data\\\"\\n             let-currIndex=\\\"currIndex\\\">\\n\\t<ng-container *ngIf=\\\"type === 'image' && index === currIndex\\\">\\n    <span class=\\\"imageViewTitle\\\" float=\\\"left\\\" position=\\\"absolute\\\">{{data.title}}</span>\\n    <span class=\\\"imageViewTitle\\\" float=\\\"right\\\">{{data.date}}</span>\\n\\n    <ngx-imageviewer [src]=\\\"data.src\\\"></ngx-imageviewer>\\n    <!--//[@slideAnimation] -->\\n\\n    <p  id=\\\"imageViewDescript\\\" >\\n      {{data.description}}\\n    </p>\\n  </ng-container>\\n</ng-template>\\n\"","export default \"<ul class=\\\"side-nav\\\">\\n  <li *ngFor=\\\"let pots of kiln$ | async\\\"\\n     routerLinkActive=\\\"selected\\\">\\n    <a [routerLink]=\\\"[pots.name]\\\">\\n      <span>{{ pots.name }}</span>\\n    </a>\\n  </li>\\n</ul>\\n\\n<router-outlet></router-outlet>\\n\\n<!--\\nCopyright Google LLC. All Rights Reserved.\\nUse of this source code is governed by an MIT-style license that\\ncan be found in the LICENSE file at http://angular.io/license\\n-->\\n\"","export default \"<router-outlet></router-outlet>\\n\\n<div id=\\\"cover\\\" class=\\\"tiles\\\" [style.width.px]=\\\"screenWidth - 180\\\"\\n*ngIf=\\\"this.router.url === '/pottery'\\\">\\n\\n<h2 class=\\\"page_title\\\">Pottery</h2>\\n\\n<div class=\\\"tile\\\"  *ngFor=\\\"let kilns of kiln$ | async\\\" >\\n  <a [routerLink]=\\\"[kilns.name]\\\">\\n    <div class=\\\"image_container\\\">\\n      <img class=\\\"image\\\" [src]=\\\"kilns.pots[0].src\\\" [attr.imageSrc]=\\\"kilns.pots[0].src\\\" [attr.thumbSrc]=\\\"kilns.pots[0].src\\\">\\n      <div class=\\\"image_hover\\\">\\n        <p><b> {{kilns.name}} </b></p>\\n      </div>\\n    </div>\\n  </a>\\n</div>\\n</div>\\n\"","\nimport { Injectable } from '@angular/core';\nimport {\n  Router, Resolve,\n  RouterStateSnapshot,\n  ActivatedRouteSnapshot\n} from '@angular/router';\nimport { Observable, of, EMPTY } from 'rxjs';\nimport { mergeMap, take } from 'rxjs/operators';\n\nimport { PotsService } from './pottery.service';\nimport { Pots } from './pots';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PotDetailResolverService implements Resolve<Pots> {\n  constructor(private ps: PotsService, private router: Router) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Pots> | Observable<never> {\n    let name = route.paramMap.get('name');\n\n    return this.ps.getPots(name).pipe(\n      take(1),\n      mergeMap(pots => {\n        if (pots) {\n          return of(pots);\n        } else { // id not found\n          this.router.navigate(['/pottery']);\n          return EMPTY;\n        }\n      })\n    );\n  }\n}\n\n\n/*\nCopyright Google LLC. All Rights Reserved.\nUse of this source code is governed by an MIT-style license that\ncan be found in the LICENSE file at http://angular.io/license\n*/\n","export default \"\\n/deep/ app-pottery .tile .state{\\n  font-size: 0.8em;\\n  margin-bottom: 3px;\\n  margin-top: -8px;\\n  text-align: center;\\n}\\n\\n.typestatus {\\n  display:inline-block;\\n  position: relative;\\n  width:36px;\\n  height:36px;\\n  background-size: 24px 24px;\\n  background-repeat: no-repeat;\\n  background-position: center center;\\n  margin: 0px;\\n  vertical-align: bottom;\\n\\n}\\n\\n@media only screen and (max-width: 700px){\\n\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcG90dGVyeS9wb3QtZGV0YWlsL3BvdC1kZXRhaWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7RUFDRSxnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxvQkFBb0I7RUFDcEIsa0JBQWtCO0VBQ2xCLFVBQVU7RUFDVixXQUFXO0VBQ1gsMEJBQTBCO0VBQzFCLDRCQUE0QjtFQUM1QixrQ0FBa0M7RUFDbEMsV0FBVztFQUNYLHNCQUFzQjs7QUFFeEI7O0FBRUE7O0FBRUEiLCJmaWxlIjoic3JjL2FwcC9wb3R0ZXJ5L3BvdC1kZXRhaWwvcG90LWRldGFpbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4vZGVlcC8gYXBwLXBvdHRlcnkgLnRpbGUgLnN0YXRle1xuICBmb250LXNpemU6IDAuOGVtO1xuICBtYXJnaW4tYm90dG9tOiAzcHg7XG4gIG1hcmdpbi10b3A6IC04cHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLnR5cGVzdGF0dXMge1xuICBkaXNwbGF5OmlubGluZS1ibG9jaztcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDozNnB4O1xuICBoZWlnaHQ6MzZweDtcbiAgYmFja2dyb3VuZC1zaXplOiAyNHB4IDI0cHg7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gIG1hcmdpbjogMHB4O1xuICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xuXG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzAwcHgpe1xuXG59XG4iXX0= */\"","import { Component, OnInit, HostBinding, ViewChild, TemplateRef } from '@angular/core';\nimport { GalleryComponent, Gallery, GalleryItem ,GalleryRef } from '@ngx-gallery/core';\nimport { Lightbox } from '@ngx-gallery/lightbox';\nimport { ActivatedRoute } from '@angular/router';\nimport { HostListener } from \"@angular/core\";\n\nimport { Pots } from '../pots'\nimport { Pot } from '../pot'\n\nimport { CartService } from '../../cart.service';\nimport { IMAGEVIEWER_CONFIG, ImageViewerConfig, createButtonConfig } from '@hallysonh/ngx-imageviewer';\n\nconst MY_IMAGEVIEWER_CONFIG: ImageViewerConfig = {\n  bgStyle: 'transparent', // custom container's background style\n  loadingMessage: 'loading',//<i class=\"fa fa-spinner fa-pulse fa-3x fa-fw\"></i>\n  rotateRightButton: createButtonConfig('','',4,false),\n  rotateLeftButton: createButtonConfig('','',4,false),\n};\n\n@Component({\n  selector: 'app-pot-detail',\n  templateUrl: './pot-detail.component.html',\n  styleUrls: ['./pot-detail.component.css'],\n  providers: [\n    {\n      provide: IMAGEVIEWER_CONFIG,\n      useValue: MY_IMAGEVIEWER_CONFIG,\n    }\n  ],\n})\n\nexport class PotDetailComponent implements OnInit {\n  screenHeight: number;\n  screenWidth: number;\n\n  galleryId ='gal';\n  name: string;\n  pots: Pot[];\n  items: GalleryItem[];\n  galRef: GalleryRef;\n  lightbox: Lightbox;\n\n  @ViewChild('itemTemplate', {static: true}) itemTemplate: TemplateRef<any>;\n\n  constructor(\n    gallery: Gallery,\n    private route: ActivatedRoute,\n    private cartService: CartService,\n  ) {\n    this.galRef = gallery.ref(this.galleryId);\n  }\n\n  ngOnInit() {\n    this.getScreenSize();\n\n    this.galRef.setConfig({\n      thumb: false,\n      loadingMode: 'indeterminate',\n      itemTemplate: this.itemTemplate,\n      gestures: false,\n      //imageSize: 'cover',\n      loadingIcon: 'Loading...'\n    });\n\n    this.route.data.subscribe((data: { pots: Pots }) => {\n      this.pots = data.pots.pots;\n      this.name = data.pots.name;\n      this.items = this.pots.map(p => { //format of galleryItem\n        return{\n          type:'image',\n          data:{\n            src: p.src,\n            thumb: p.src,\n            title: p.name,\n            description: p.description,\n            date: p.date,\n            type: p.type,\n            price: p.price,\n            status: p.status,\n          }\n        };\n      });\n      this.galRef.load(this.items);\n    });\n  }\n\n  @HostListener('window:resize', ['$event'])\n  getScreenSize(event?) {\n    this.screenHeight = window.innerHeight;\n    this.screenWidth = window.innerWidth;\n  }\n\n  getTypeIcon( t ) {\n    switch (t) {\n      case \"Bowl\":\n        return \"url(/assets/icons/pot_bowl.ico)\";\n      case \"Cup\":\n        return \"url(/assets/icons/pot_cup.ico)\";\n      case \"Flower Pot\":\n        return \"url(/assets/icons/pot_flowpot.ico)\";\n      case \"Plate\":\n        return \"url(/assets/icons/pot_plate.ico)\";\n      case \"Vase\":\n        return \"url(/assets/icons/pot_vase.ico)\";\n      case \"Decoration\":\n        return \"url(/assets/icons/pot_deco.ico)\";\n    }\n    return \"url(/assets/icons/pot_other.ico)\";\n\n  }\n\n  share() {\n    window.alert('The product has been shared!');\n    ///TODO: share code\n  }\n  addToCart(pottery) {\n    window.alert('Your ' + pottery.name + ' has been added to the cart!');\n    this.cartService.addToCart(pottery);\n  }\n  available(pottery) {\n    if (this.cartService.notInCart(pottery) < 0 && pottery.status == 1) {\n      return 1;\n    }\n    else {\n      return 0;\n    }\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BvdHRlcnkvcG90LWxpc3QvcG90LWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit }  from '@angular/core';\nimport { ActivatedRoute}     from '@angular/router';\nimport { Observable }     from 'rxjs';\nimport { switchMap }      from 'rxjs/operators';\n\nimport { Pots }         from '../pots';\nimport { PotsService }  from '../pottery.service';\n\n@Component({\n  selector: 'app-pot-list',\n  templateUrl: './pot-list.component.html',\n  styleUrls: ['./pot-list.component.css']\n})\nexport class PotListComponent implements OnInit {\n  kiln$: Observable<Pots[]>;\n\n  constructor(\n    private service: PotsService,\n    private route: ActivatedRoute,\n  ){}\n\n  ngOnInit() {\n\n    this.kiln$ = this.route.paramMap.pipe(\n      switchMap(params => {\n        return this.service.getKiln();\n      })\n    );\n  }\n}\n\n\n/*\nCopyright Google LLC. All Rights Reserved.\nUse of this source code is governed by an MIT-style license that\ncan be found in the LICENSE file at http://angular.io/license\n*/\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { PotListComponent } from './pot-list/pot-list.component';\nimport { PotteryComponent } from './pottery/pottery.component';\nimport { PotDetailComponent } from './pot-detail/pot-detail.component';\n\nimport { PotDetailResolverService }    from './pot-detail-resolver.service';\n\nconst potCenterRoutes: Routes = [\n  {\n    path: '',\n    component: PotteryComponent,\n    children: [\n      {\n        path: '',\n        component: PotListComponent,\n        children: [\n          {\n            path: ':name',\n            component: PotDetailComponent,\n            resolve: { pots: PotDetailResolverService},\n          }\n        ]\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(potCenterRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class PotCenterRoutingModule { }\n\n\n/*\nCopyright Google LLC. All Rights Reserved.\nUse of this source code is governed by an MIT-style license that\ncan be found in the LICENSE file at http://angular.io/license\n*/\n","import { NgModule }       from '@angular/core';\nimport { CommonModule }   from '@angular/common';\n\nimport { GalleryModule } from '@ngx-gallery/core';\nimport { LightboxModule } from '@ngx-gallery/lightbox';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\nimport { PotListComponent }       from './pot-list/pot-list.component';\nimport { PotteryComponent }     from './pottery/pottery.component';\nimport { PotDetailComponent }     from './pot-detail/pot-detail.component';\n\nimport { PotCenterRoutingModule } from './pottery-routing.module';\nimport  {  HttpClientModule  }  from  '@angular/common/http';\n\nimport { ImageViewerModule } from '@hallysonh/ngx-imageviewer';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FontAwesomeModule,\n    GalleryModule,\n    LightboxModule.withConfig({\n      panelClass: 'fullscreen',\n      hasBackdrop:false,\n    }),\n    PotCenterRoutingModule,\n    ImageViewerModule,\n  ],\n  declarations: [\n    PotteryComponent,\n    PotListComponent,\n    PotDetailComponent,\n  ]\n})\nexport class PotteryModule {}\n\n\n/*\nCopyright Google LLC. All Rights Reserved.\nUse of this source code is governed by an MIT-style license that\ncan be found in the LICENSE file at http://angular.io/license\n*/\n","import { BehaviorSubject, Observable, of, throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport {  HttpClient, HttpParams ,HttpErrorResponse }  from  '@angular/common/http';\n\nimport { Injectable } from '@angular/core';\nimport { Pots } from './pots';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PotsService {\n\n  private kilns: Array<Pots> ;\n  private TABLE_URL = \"https://zyha.tk/a/get-table.php\";\n\n  constructor(\n    private httpClient:  HttpClient,\n  ) { }\n\n  getKiln():Observable<Pots[]>{\n    return this.httpClient.get(this.TABLE_URL, {\n      params: new HttpParams().set('table', 'pots')}).pipe(\n        map((res) => {\n          console.log(res);\n\n          this.kilns = res['data'];\n          console.log(this.kilns);\n          return this.kilns;\n\n        }),\n        catchError(this.handleError));\n  }\n  private handleError(error: HttpErrorResponse) {\n    console.log(error);\n    // return an observable with a user friendly message\n    return throwError('Error! something went wrong.');\n  }\n  getPots(id: string ) {\n    return this.getKiln().pipe(\n      map(pots => pots.find(pots => pots.name === id))\n    );\n  }\n\n  //addCrisis(name: string) {\n//    name = name.trim();\n  //  if (name) {\n  //    let crisis = { id: CrisisService.nextCrisisId++, name };\n  //    CRISES.push(crisis);\n  //    this.crises$.next(CRISES);\n  //  }\n  //}\n}\n\n\n/*\nCopyright Google LLC. All Rights Reserved.\nUse of this source code is governed by an MIT-style license that\ncan be found in the LICENSE file at http://angular.io/license\n*/\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BvdHRlcnkvcG90dGVyeS9wb3R0ZXJ5LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, HostBinding} from '@angular/core';\nimport { NavbarService } from '../../navbar.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HostListener } from \"@angular/core\";\nimport { Observable }     from 'rxjs';\nimport { switchMap }      from 'rxjs/operators';\n\nimport { Pot } from '../pot';\nimport { Pots }         from '../pots';\nimport { PotsService }  from '../pottery.service';\n\n\n@Component({\n  selector: 'app-pottery',\n  templateUrl: './pottery.component.html',\n  styleUrls: ['./pottery.component.css']\n})\n\nexport class PotteryComponent implements OnInit {\n  screenHeight: number;\n  screenWidth: number;\n  kiln$: Observable<Pots[]>;\n\n  constructor(\n    public nav: NavbarService,\n    private service: PotsService,\n    private route: ActivatedRoute,\n    public router: Router,\n  ) {\n    this.getScreenSize();\n  }\n\n  ngOnInit() {\n\n    this.kiln$ = this.route.paramMap.pipe(\n      switchMap(params => {\n        return this.service.getKiln();\n      })\n    );\n    this.nav.show();\n    this.nav.setDeg(270);\n  }\n\n  @HostListener('window:resize', ['$event'])\n  getScreenSize(event?) {\n    this.screenHeight = window.innerHeight;\n    this.screenWidth = window.innerWidth;\n  }\n}\n"]}