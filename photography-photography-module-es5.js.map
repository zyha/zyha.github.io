{"version":3,"sources":["webpack:///src/app/photography/photo-detail/photo-detail.component.html","webpack:///src/app/photography/photo-list/photo-list.component.html","webpack:///src/app/photography/photography/photography.component.html","webpack:///src/app/photography/photo-detail-resolver.service.ts","webpack:///src/app/photography/photo-detail/photo-detail.component.css","webpack:///src/app/photography/photo-detail/photo-detail.component.ts","webpack:///src/app/photography/photo-list/photo-list.component.css","webpack:///src/app/photography/photo-list/photo-list.component.ts","webpack:///src/app/photography/photography-routing.module.ts","webpack:///src/app/photography/photography.module.ts","webpack:///src/app/photography/photography/photography.component.css","webpack:///src/app/photography/photography/photography.component.ts","webpack:///src/app/photography/photos.service.ts"],"names":["PhotoDetailResolverService","ps","router","route","state","name","paramMap","get","getPhotos","pipe","photos","navigate","providedIn","MY_IMAGEVIEWER_CONFIG","bgStyle","loadingMessage","rotateRightButton","rotateLeftButton","PhotoDetailComponent","gallery","galleryId","galRef","ref","getScreenSize","setConfig","thumb","loadingMode","itemTemplate","gestures","loadingIcon","data","subscribe","imgs","items","map","p","type","src","srcURL","preURL","title","description","date","load","event","screenHeight","window","innerHeight","screenWidth","innerWidth","selector","template","providers","provide","useValue","PhotoListComponent","service","error","albums$","params","getAlbum","photoCenterRoutes","path","component","children","resolve","PhotoCenterRoutingModule","imports","forChild","exports","PhotographyModule","withConfig","panelClass","hasBackdrop","declarations","PhotographyComponent","nav","show","setDeg","PhotosService","httpClient","TABLE_URL","set","res","albums","handleError","console","log","id","find"],"mappings":"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","file":"photography-photography-module-es5.js","sourcesContent":["export default \"<!--Add custom template to image items-->\\n<h2 class=\\\"page_title\\\">{{name}}</h2>\\n\\n<div class=\\\"tiles\\\" [style.width.px]=\\\"screenWidth - 180\\\" *ngIf=\\\"photos\\\">\\n  <div *ngFor=\\\"let pho of photos; let i = index\\\" class=\\\"tile\\\" [lightbox]=\\\"i\\\" [gallery]=\\\"galleryId\\\">\\n    <div class=\\\"image_container\\\" >\\n      <img class=\\\"image\\\" [src]=\\\"pho.preURL\\\">\\n      <div class=\\\"image_text\\\">{{pho.description}}</div>\\n    </div>\\n    <p class=\\\"title\\\">\\n      {{pho.title}}\\n      <b class=\\\"date\\\">{{pho.date}}</b>\\n    </p>\\n  </div>\\n</div>\\n\\n<ng-template #itemTemplate\\n             let-index=\\\"index\\\"\\n             let-type=\\\"type\\\"\\n             let-data=\\\"data\\\"\\n             let-currIndex=\\\"currIndex\\\">\\n\\t<ng-container *ngIf=\\\"type === 'image' && index === currIndex\\\">\\n    <span class=\\\"imageViewTitle\\\" float=\\\"left\\\" position=\\\"absolute\\\">{{data.title}}</span>\\n    <span class=\\\"imageViewTitle\\\" float=\\\"right\\\">{{data.date}}</span>\\n\\n    <ngx-imageviewer [src]=\\\"data.src\\\"></ngx-imageviewer>\\n    <!--//[@slideAnimation] -->\\n\\n    <p  id=\\\"imageViewDescript\\\" >\\n      {{data.description}}\\n    </p>\\n  </ng-container>\\n</ng-template>\\n\"","export default \"<ul class=\\\"side-nav\\\">\\n  <li *ngFor=\\\"let album of albums$ | async\\\"\\n     routerLinkActive=\\\"selected\\\">\\n    <a [routerLink]=\\\"[album.name]\\\">\\n      <span>{{ album.name }} </span>\\n    </a>\\n  </li>\\n</ul>\\n<router-outlet></router-outlet>\\n\\n<!--\\nCopyright Google LLC. All Rights Reserved.\\nUse of this source code is governed by an MIT-style license that\\ncan be found in the LICENSE file at http://angular.io/license\\n-->\\n\"","export default \"<router-outlet></router-outlet>\\n\\n<div id=\\\"cover\\\" class=\\\"tiles\\\" [style.width.px]=\\\"screenWidth - 180\\\"\\n*ngIf=\\\"this.router.url === '/photography'\\\">\\n\\n<h2 class=\\\"page_title\\\">Albums</h2>\\n\\n<div class=\\\"tile\\\"  *ngFor=\\\"let album of albums$ | async\\\" >\\n  <a [routerLink]=\\\"[album.name]\\\"  >\\n    <div class=\\\"image_container\\\">\\n      <img class=\\\"image\\\" [src]=\\\"album.imgs[0].preURL\\\" [attr.imageSrc]=\\\"album.imgs[0].srcURL\\\" [attr.thumbSrc]=\\\"album.imgs[0].preURL\\\">\\n      <div class=\\\"image_hover\\\">\\n        <p><b> {{album.name}} </b></p>\\n      </div>\\n    </div>\\n  </a>\\n</div>\\n</div>\\n\"","\nimport { Injectable } from '@angular/core';\nimport {\n  Router, Resolve,\n  RouterStateSnapshot,\n  ActivatedRouteSnapshot\n} from '@angular/router';\nimport { Observable, of, EMPTY } from 'rxjs';\nimport { mergeMap, take } from 'rxjs/operators';\n\nimport { PhotosService } from './photos.service';\nimport { Photos } from './photos';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PhotoDetailResolverService implements Resolve<Photos> {\n  constructor(private ps: PhotosService, private router: Router) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Photos> | Observable<never> {\n    let name = route.paramMap.get('name');\n\n    return this.ps.getPhotos(name).pipe(\n      take(1),\n      mergeMap(photos => {\n        if (photos) {\n          return of(photos);\n        } else { // id not found\n          this.router.navigate(['/photography']);\n          return EMPTY;\n        }\n      })\n    );\n  }\n}\n\n\n/*\nCopyright Google LLC. All Rights Reserved.\nUse of this source code is governed by an MIT-style license that\ncan be found in the LICENSE file at http://angular.io/license\n*/\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Bob3RvZ3JhcGh5L3Bob3RvLWRldGFpbC9waG90by1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, HostBinding, ViewChild, TemplateRef } from '@angular/core';\nimport { GalleryComponent, Gallery, GalleryItem ,GalleryRef } from '@ngx-gallery/core';\nimport { Lightbox } from '@ngx-gallery/lightbox';\nimport { ActivatedRoute } from '@angular/router';\nimport { HostListener } from \"@angular/core\";\n\nimport { Photos } from '../photos'\nimport { Photo } from '../photo'\n\n\nimport { IMAGEVIEWER_CONFIG, ImageViewerConfig, createButtonConfig } from '@hallysonh/ngx-imageviewer';\n\nconst MY_IMAGEVIEWER_CONFIG: ImageViewerConfig = {\n  bgStyle: 'transparent', // custom container's background style\n  loadingMessage: 'Loading ...',\n  rotateRightButton: createButtonConfig('','',4,false),\n  rotateLeftButton: createButtonConfig('','',4,false),\n};\n\n@Component({\n  selector: 'app-photo-detail',\n  templateUrl: './photo-detail.component.html',\n  styleUrls: ['./photo-detail.component.css'],\n  providers: [\n    {\n      provide: IMAGEVIEWER_CONFIG,\n      useValue: MY_IMAGEVIEWER_CONFIG,\n    }\n  ],\n})\n\nexport class PhotoDetailComponent implements OnInit {\n  screenHeight: number;\n  screenWidth: number;\n\n  galleryId ='gal';\n  name: string;\n  photos: Photo[];\n  items: GalleryItem[];\n  galRef: GalleryRef;\n  lightbox: Lightbox;\n\n  @ViewChild('itemTemplate', {static: true}) itemTemplate: TemplateRef<any>;\n\n  constructor(\n    gallery: Gallery,\n    private route: ActivatedRoute,\n  ) {\n    this.galRef = gallery.ref(this.galleryId);\n  }\n\n  ngOnInit() {\n    this.getScreenSize();\n\n    this.galRef.setConfig({\n      thumb: false,\n      loadingMode: 'indeterminate',\n      itemTemplate: this.itemTemplate,\n      gestures: false,\n      //imageSize: 'cover',\n      loadingIcon: 'Loading...'\n    });\n\n    this.route.data.subscribe((data: { photos: Photos }) => {\n      this.photos = data.photos.imgs;\n      this.name = data.photos.name;\n      this.items = this.photos.map(p => { //format of galleryItem\n        return{\n          type:'image',\n          data:{\n            src: p.srcURL,\n            thumb: p.preURL,\n            title: p.title,\n            description: p.description,\n            date: p.date\n          }\n        };\n      });\n      this.galRef.load(this.items);\n    });\n\n  }\n\n  @HostListener('window:resize', ['$event'])\n  getScreenSize(event?) {\n    this.screenHeight = window.innerHeight;\n    this.screenWidth = window.innerWidth;\n  }\n\n}\n","export default \"\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Bob3RvZ3JhcGh5L3Bob3RvLWxpc3QvcGhvdG8tbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit }  from '@angular/core';\nimport { ActivatedRoute }     from '@angular/router';\n\nimport { Photos }         from '../photos';\nimport { PhotosService }  from '../photos.service';\nimport { Observable }     from 'rxjs';\nimport { switchMap }      from 'rxjs/operators';\n\n@Component({\n  selector: 'app-photo-list',\n  templateUrl: './photo-list.component.html',\n  styleUrls: ['./photo-list.component.css']\n})\nexport class PhotoListComponent implements OnInit {\n  albums$: Observable<Photos[]>;\n  error='';\n  constructor(\n    private service: PhotosService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.albums$ = this.route.paramMap.pipe(\n      switchMap(params => {\n        return this.service.getAlbum();\n      })\n    );\n  }\n}\n\n\n/*\nCopyright Google LLC. All Rights Reserved.\nUse of this source code is governed by an MIT-style license that\ncan be found in the LICENSE file at http://angular.io/license\n*/\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { PhotoListComponent } from './photo-list/photo-list.component';\nimport { PhotographyComponent } from './photography/photography.component';\nimport { PhotoDetailComponent } from './photo-detail/photo-detail.component';\n\nimport { PhotoDetailResolverService }    from './photo-detail-resolver.service';\n\nconst photoCenterRoutes: Routes = [\n  {\n    path: '',\n    component: PhotographyComponent,\n    children: [\n      {\n        path: '',\n        component: PhotoListComponent,\n        children: [\n          {\n            path: ':name',\n            component: PhotoDetailComponent,\n            resolve: { photos: PhotoDetailResolverService},\n          }\n        ]\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(photoCenterRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class PhotoCenterRoutingModule { }\n\n\n/*\nCopyright Google LLC. All Rights Reserved.\nUse of this source code is governed by an MIT-style license that\ncan be found in the LICENSE file at http://angular.io/license\n*/\n","import { NgModule }       from '@angular/core';\nimport { CommonModule }   from '@angular/common';\n\nimport { GalleryModule } from '@ngx-gallery/core';\nimport { LightboxModule } from '@ngx-gallery/lightbox';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\nimport { PhotoListComponent }       from './photo-list/photo-list.component';\nimport { PhotographyComponent }     from './photography/photography.component';\nimport { PhotoDetailComponent }     from './photo-detail/photo-detail.component';\n\nimport { PhotoCenterRoutingModule } from './photography-routing.module';\nimport  {  HttpClientModule  }  from  '@angular/common/http';\n\nimport { ImageViewerModule } from '@hallysonh/ngx-imageviewer';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FontAwesomeModule,\n    GalleryModule,\n    LightboxModule.withConfig({\n      panelClass: 'fullscreen',\n      hasBackdrop:false,\n    }),\n    ImageViewerModule,\n    PhotoCenterRoutingModule,\n  ],\n  declarations: [\n    PhotographyComponent,\n    PhotoListComponent,\n    PhotoDetailComponent,\n  ]\n})\nexport class PhotographyModule {}\n\n\n/*\nCopyright Google LLC. All Rights Reserved.\nUse of this source code is governed by an MIT-style license that\ncan be found in the LICENSE file at http://angular.io/license\n*/\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Bob3RvZ3JhcGh5L3Bob3RvZ3JhcGh5L3Bob3RvZ3JhcGh5LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, HostBinding} from '@angular/core';\nimport { NavbarService } from '../../navbar.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HostListener } from \"@angular/core\";\nimport { Observable }     from 'rxjs';\nimport { switchMap }      from 'rxjs/operators';\n\nimport { Photo } from '../photo'\nimport { Photos }         from '../photos';\nimport { PhotosService }  from '../photos.service';\n\n\n@Component({\n  selector: 'app-photography',\n  templateUrl: './photography.component.html',\n  styleUrls: ['./photography.component.css']\n})\n\nexport class PhotographyComponent implements OnInit {\n  screenHeight: number;\n  screenWidth: number;\n  albums$: Observable<Photos[]>;\n\n  constructor(\n    public nav: NavbarService,\n    private service: PhotosService,\n    private route: ActivatedRoute,\n    public router: Router,\n  ) {\n    this.getScreenSize();\n  }\n\n  ngOnInit() {\n    this.albums$ = this.route.paramMap.pipe(\n      switchMap(params => {\n        return this.service.getAlbum();\n      })\n    );\n    this.nav.show();\n    this.nav.setDeg(90);\n\n  }\n\n  @HostListener('window:resize', ['$event'])\n  getScreenSize(event?) {\n    this.screenHeight = window.innerHeight;\n    this.screenWidth = window.innerWidth;\n  }\n\n}\n","import { BehaviorSubject , Observable, of, throwError} from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport {  HttpClient, HttpParams ,HttpErrorResponse }  from  '@angular/common/http';\n\nimport { Injectable } from '@angular/core';\nimport { Photos } from './photos';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PhotosService {\n  private albums: Array<Photos> ;\n  private TABLE_URL = \"https://zyha.tk/a/get-table.php\";\n\n  constructor(\n    private httpClient:  HttpClient,\n  ){}\n\n  getAlbum():Observable<Photos[]> {\n    return this.httpClient.get(this.TABLE_URL, {\n      params: new HttpParams().set('table', 'photos')}).pipe(\n        map((res) => {\n          this.albums = res['data'];\n          return this.albums;\n        }),\n        catchError(this.handleError));\n  }\n  private handleError(error: HttpErrorResponse) {\n    console.log(error);\n    // return an observable with a user friendly message\n    return throwError('Error! something went wrong.');\n  }\n\n  getPhotos(id: string ) {\n    return this.getAlbum().pipe(\n      map(photos => photos.find(photos => photos.name === id))\n    );\n  }\n\n      //addCrisis(name: string) {\n      //    name = name.trim();\n      //  if (name) {\n      //    let crisis = { id: CrisisService.nextCrisisId++, name };\n      //    CRISES.push(crisis);\n      //    this.crises$.next(CRISES);\n      //  }\n      //}\n    }\n\n\n    /*\n    Copyright Google LLC. All Rights Reserved.\n    Use of this source code is governed by an MIT-style license that\n    can be found in the LICENSE file at http://angular.io/license\n    */\n"]}